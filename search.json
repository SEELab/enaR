[{"path":"/articles/enaR.html","id":"documentation-to-get-you-started","dir":"Articles","previous_headings":"","what":"Documentation to Get You Started","title":"Getting Started","text":"Vignette (tutorial) Scholarly Introduction – Borrett & Lau (2014) enaR: r package Ecosystem Network Analysis. Methods Ecology Evolution 5: 1206-1213. Comprehensive R Archival Network","code":""},{"path":"/articles/enterData.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Entering your Data","text":"enaR software suite apply Ecological Network Analyses models trace flow energy matter ecosystems. software currently include functions help investigators construct model; assumes model hand analyze. Investigators might build model using phenomenological approach using systems dynamics modeling. also possible use software tools aid model construction like EcoPath EcoSim (EwE) limSolve Linear Inverse Modeling. Regardless model construction technique, full set information required ENA includes following: flow node node j, typically summarized flow matrix F. trophic ecosystem model, many flows generated feeding relationships. Diet matrix EcoPath contains information. boundary input flows environment node , summarized input vector z. boundary losses node . can summarized single vector (y), cases necessary distinguish two types boundary losses: respirations losses refer low quality losses used work (r). export losses refer lost energy material can used work systems (e). Storage (e.g., biomass) node (X) Living logical vector indicates whether node living entity (TRUE) (FALSE). critical analysis algorithms (e.g., Mixed Trophic Impacts enaMTI()) treat living non-living nodes differently. Node Names vector names nodes. strictly necessary, makes reading enaR output much easier. summary, fully specified model enaR includes {F, z, r, e, y = r + e, X, Living, Names}. clear, however, analyses require information.","code":""},{"path":"/articles/enterData.html","id":"entering-data","dir":"Articles","previous_headings":"","what":"Entering Data","title":"Entering your Data","text":"pack() function can used create enaR required data object. assumes necessary model data can enter get directly R.","code":""},{"path":"/articles/enterData.html","id":"reading-other-data-formats","dir":"Articles","previous_headings":"","what":"Reading Other Data Formats","title":"Entering your Data","text":"Many investigators ecological network models one several formats. enaR package provides several functions read data formats construct enaR network data object. Existing read functions include: read.scor() reads plain text file data formatted using SCOR format based sparse matrices developed input Dr. Ulanowicz’s NETWRK software. read.nea() reads NEA.m formatted system matrix stored comma separated file. read.wand() reads data MS Excel spreadsheet formatted WAND program. read.EcoNet() constructs enaR network data object data formatted input EcoNet program. read.enam() reads data extended matrix format used colleagues. commonly used model construction software food webs EcoPath (EwE), ideal function read data format. technically challenging, goal future.","code":""},{"path":"/articles/flow_simple.html","id":"load-the-data","dir":"Articles","previous_headings":"","what":"Load the data","title":"Flow Analysis: Simple","text":"","code":"# load a model data(enaModels) m <- enaModels[[9]] # select the oyster reef model"},{"path":"/articles/flow_simple.html","id":"perform-the-analysis","dir":"Articles","previous_headings":"","what":"Perform the analysis","title":"Flow Analysis: Simple","text":"","code":"f <- enaFlow(m)  # peform the ENA flow analysis attributes(f) #> $names #> [1] \"T\"   \"G\"   \"GP\"  \"N\"   \"NP\"  \"TCC\" \"TDC\" \"ns\" show(f$N)  # integral output-oriented flow intensity #>                    Filter Feeders Microbiota Meiofauna Deposit Feeders #> Filter Feeders                  1  0.1970605 0.2044972      0.06052568 #> Microbiota                      0  1.1018630 0.2532824      0.19036255 #> Meiofauna                       0  0.2862988 1.2971032      0.16586629 #> Deposit Feeders                 0  0.4039454 0.4191895      1.12406883 #> Predators                       0  0.2424763 0.2516269      0.07447480 #> Deposited Detritus              0  0.5096313 0.5288639      0.15652949 #>                     Predators Deposited Detritus #> Filter Feeders     0.01653243          0.5368966 #> Microbiota         0.01305235          0.2775284 #> Meiofauna          0.01137274          0.7800287 #> Deposit Feeders    0.07707261          1.1005597 #> Predators          1.00510642          0.6606330 #> Deposited Detritus 0.01073256          1.3885039  show(f$ns) # vector of flow-based network statisics #>      Boundary     TST     TSTp      APL       FCI       BFI       DFI       IFI #> [1,]    41.47 83.5833 125.0533 2.015512 0.1101686 0.4961517 0.1950689 0.3087794 #>          ID.F   ID.F.I   ID.F.O    HMG.I    HMG.O AMP.I AMP.O mode0.F  mode1.F #> [1,] 1.582925 1.716607 1.534181 2.051826 1.891638     3     1   41.47 32.90504 #>       mode2.F  mode3.F mode4.F #> [1,] 9.208256 32.90504   41.47"},{"path":"/articles/flow_simple.html","id":"ascendency-metrics","dir":"Articles","previous_headings":"","what":"Ascendency Metrics","title":"Flow Analysis: Simple","text":"ascendancy metrics proposed Dr. Ulanowicz also often applied network flow distributions. enaR done follows.","code":"a <- enaAscendency(m)  # calculate the Ascendnecy metrics show(a) #>             H      AMI       Hr      CAP      ASC       OH   ASC.CAP    OH.CAP #> [1,] 3.018275 1.330211 1.688063 377.4452 166.3473 211.0979 0.4407191 0.5592809 #>      robustness     ELD       TD  A.input A.internal A.export A.respiration #> [1,]  0.3611021 1.79506 2.514395 66.03696   72.62476        0      27.68558 #>      OH.input OH.internal OH.export OH.respiration CAP.input CAP.internal #> [1,]        0    103.2914         0       107.8065  66.03696     175.9162 #>      CAP.export CAP.respiration #> [1,]          0         135.492"},{"path":"/articles/structure_advanced.html","id":"distance","dir":"Articles","previous_headings":"","what":"Distance","title":"Structure Analysis: Advanced","text":"can use tools network package learn graph. example can find geodesic distance nodes (ignoring edge weights). tells us maximum geodesic distance nodes 2, 3, 4, 5, 6 others walk length 2, node 1 unreachable nodes. single geodesic nodes, two walks length 2 node 2 (Microbiota) node 6 (Deposited Detritus).","code":"# -- DISTANCE --- geodist(NET)       # returns counts of geodesics and length of geodesics #> $counts #>      [,1] [,2] [,3] [,4] [,5] [,6] #> [1,]    1    1    1    1    1    1 #> [2,]    0    1    1    1    1    2 #> [3,]    0    1    1    1    1    1 #> [4,]    0    1    1    1    1    1 #> [5,]    0    1    1    1    1    1 #> [6,]    0    1    1    1    1    1 #>  #> $gdist #>      [,1] [,2] [,3] [,4] [,5] [,6] #> [1,]    0    2    2    2    1    1 #> [2,]  Inf    0    1    1    2    2 #> [3,]  Inf    2    0    1    2    1 #> [4,]  Inf    2    2    0    1    1 #> [5,]  Inf    2    2    2    0    1 #> [6,]  Inf    1    1    1    2    0"},{"path":"/articles/structure_advanced.html","id":"degree","dir":"Articles","previous_headings":"","what":"Degree","title":"Structure Analysis: Advanced","text":"can also find unweighted node degree (positional importance). directed network, can find input, output, total degree","code":"degree(NET, cmode = \"indegree\") #> [1] 0 1 2 3 2 4 degree(NET, cmode = \"outdegree\") #> [1] 2 2 2 2 1 3 degree(NET, cmode = \"freeman\")  # total #> [1] 2 3 4 5 3 7"},{"path":"/articles/structure_advanced.html","id":"using-enastructure","dir":"Articles","previous_headings":"","what":"Using enaStructure()","title":"Structure Analysis: Advanced","text":"enaR package includes function extracts adjacency matrix calculates number network statistics.","code":"s <- enaStructure(NET) attributes(s) #> $names #> [1] \"A\"  \"ns\"  show(s$A) #>                    Filter Feeders Microbiota Meiofauna Deposit Feeders #> Filter Feeders                  0          0         0               0 #> Microbiota                      0          0         1               1 #> Meiofauna                       0          0         0               1 #> Deposit Feeders                 0          0         0               0 #> Predators                       0          0         0               0 #> Deposited Detritus              0          1         1               1 #>                    Predators Deposited Detritus #> Filter Feeders             1                  1 #> Microbiota                 0                  0 #> Meiofauna                  0                  1 #> Deposit Feeders            1                  1 #> Predators                  0                  1 #> Deposited Detritus         0                  0 show(s$ns) #>      n  L         C LD      ppr    lam1A mlam1A      rho         R        d #> [1,] 6 12 0.3333333  2 2.147899 2.147899      1 2.147899 0.4655712 0.147899 #>      no.scc no.scc.big      pscc #> [1,]      2          1 0.8333333"},{"path":"/articles/structure_simple.html","id":"load-data","dir":"Articles","previous_headings":"","what":"load data","title":"Structure Analysis: Simple","text":"Next, apply structural network analysis. s data object contains two objects: adjacency matrix vector network statistics called ns.","code":"data(enaModels)        # load library of Ecosystem Networks names(enaModels)       # view model names #>   [1] \"Marine Coprophagy (oyster)\"               #>   [2] \"Lake Findley \"                            #>   [3] \"Mirror Lake\"                              #>   [4] \"Lake Wingra\"                              #>   [5] \"Marion Lake\"                              #>   [6] \"Cone Springs\"                             #>   [7] \"Silver Springs\"                           #>   [8] \"English Channel\"                          #>   [9] \"Oyster Reef \"                             #>  [10] \"Baie de Somme\"                            #>  [11] \"Bothnian Bay\"                             #>  [12] \"Bothnian Sea\"                             #>  [13] \"Ythan Estuary\"                            #>  [14] \"Sundarban Mangrove (virgin)\"              #>  [15] \"Sundarban Mangrove (reclaimed)\"           #>  [16] \"Baltic Sea\"                               #>  [17] \"Ems Estuary\"                              #>  [18] \"Swartkops Estuary  15\"                    #>  [19] \"Southern Benguela Upwelling\"              #>  [20] \"Peruvian Upwelling\"                       #>  [21] \"Crystal River (control)\"                  #>  [22] \"Crystal River (thermal)\"                  #>  [23] \"Charca de Maspalomas Lagoon\"              #>  [24] \"Northern Benguela Upwelling\"              #>  [25] \"Swartkops Estuary\"                        #>  [26] \"Sunday Estuary\"                           #>  [27] \"Kromme Estuary\"                           #>  [28] \"Okefenokee Swamp\"                         #>  [29] \"Neuse Estuary (early summer 1997)\"        #>  [30] \"Neuse Estuary (late summer 1997) \"        #>  [31] \"Neuse Estuary (early summer 1998)\"        #>  [32] \"Neuse Estuary (late summer 1998)\"         #>  [33] \"Gulf of Maine\"                            #>  [34] \"Georges Bank\"                             #>  [35] \"Middle Atlantic Bight\"                    #>  [36] \"Narragansett Bay\"                         #>  [37] \"Southern New England Bight\"               #>  [38] \"Chesapeake Bay\"                           #>  [39] \"Mondego Estuary (Zostera sp. Meadows)\"    #>  [40] \"Mdloti Estuary (C, March 2002)\"           #>  [41] \"St. Marks Seagrass, site 1 (Jan.)\"        #>  [42] \"St. Marks Seagrass, site 1 (Feb.)\"        #>  [43] \"St. Marks Seagrass, site 2 (Jan.)\"        #>  [44] \"St. Marks Seagrass, site 2 (Feb.)\"        #>  [45] \"St. Marks Seagrass, site 3 (Jan.)\"        #>  [46] \"St. Marks Seagrass, site 4 (Feb.)\"        #>  [47] \"Sylt-Romo Bight (C)\"                      #>  [48] \"Graminoids (wet)\"                         #>  [49] \"Graminoids (dry)\"                         #>  [50] \"Cypress (wet)\"                            #>  [51] \"Cypress (dry)\"                            #>  [52] \"Lake Oneida (pre-ZM)\"                     #>  [53] \"Lake Oneida (post-ZM)\"                    #>  [54] \"Bay of Quinte (pre-ZM)\"                   #>  [55] \"Bay of Quinte (post-ZM)\"                  #>  [56] \"Mangroves (wet)\"                          #>  [57] \"Mangroves (dry)\"                          #>  [58] \"Florida Bay (wet)\"                        #>  [59] \"Florida Bay (dry)\"                        #>  [60] \"Hubbard Brook (Ca)(Waide)\"                #>  [61] \"Hardwood Forest, NH (Ca)\"                 #>  [62] \"Duglas Fir Forest, WA (Ca)\"               #>  [63] \"Duglas Fir Forest, WA (K)\"                #>  [64] \"Puerto Rican Rain Forest (Ca)\"            #>  [65] \"Puerto Rican Rain Forest (K)\"             #>  [66] \"Puerto Rican Rain Forest (Mg)\"            #>  [67] \"Puerto Rican Rain Forest (Cu)\"            #>  [68] \"Puerto Rican Rain Forest (Fe)\"            #>  [69] \"Puerto Rican Rain Forest (Mn)\"            #>  [70] \"Puerto Rican Rain Forest (Na)\"            #>  [71] \"Puerto Rican Rain Forest (Sr)\"            #>  [72] \"Tropical Rain Forest (N)\"                 #>  [73] \"Neuse River Estuary (N, AVG)\"             #>  [74] \"Neuse River Estuary (N, Spring 1985)\"     #>  [75] \"Neuse River Estuary (N, Summer 1985)\"     #>  [76] \"Neuse River Estuary (N,  Fall 1985)\"      #>  [77] \"Neuse River Estuary (N, Winter 1986)\"     #>  [78] \"Neuse River Estuary (N, Spring 1986)\"     #>  [79] \"Neuse River Estuary (N, Summer 1986)\"     #>  [80] \"Neuse River Estuary (N, Fall 1986)\"       #>  [81] \"Neuse River Estuary (N, Winter 1987)\"     #>  [82] \"Neuse River Estuary (N, Spring 1987)\"     #>  [83] \"Neuse River Estuary (N, Summer 1987)\"     #>  [84] \"Neuse River Estuary (N, Fall 1987)\"       #>  [85] \"Neuse River Estuary (N, Winter 1988)\"     #>  [86] \"Neuse River Estuary (N, Spring 1988)\"     #>  [87] \"Neuse River Estuary (N, Summer 1988)\"     #>  [88] \"Neuse River Estuary (N, Fall 1988)\"       #>  [89] \"Neuse River Estuary (N, Winter 1989)\"     #>  [90] \"Cape Fear River Estuary (N, oligohaline)\" #>  [91] \"Cape Fear River Estuary (N, polyhaline)\"  #>  [92] \"Lake Lanier (P) Averaged\"                 #>  [93] \"Great Lakes (N)\"                          #>  [94] \"Baltic Sea (N)\"                           #>  [95] \"Chesapeake Bay (N)\"                       #>  [96] \"Chesapeake Bay (P)\"                       #>  [97] \"Chesapeake Bay (P, Winter)\"               #>  [98] \"Chesapeake Bay (P, Spring)\"               #>  [99] \"Chesapeake Bay (P, Summer)\"               #> [100] \"Chesapeake Bay (P, Fall)\"                 #> [101] \"Sylt-Romo Bight (N)\"                      #> [102] \"Sylt-Romo Bight (P)\"                      #> [103] \"Beijing Urban Metabolism (C)\"             #> [104] \"Vienna Urban Metabolism (C)\" NET <- enaModels[[9]]  # select the oyster NET s <- enaStructure(NET) attributes(s) #> $names #> [1] \"A\"  \"ns\" # Adjacency matrix show(s$A) #>                    Filter Feeders Microbiota Meiofauna Deposit Feeders #> Filter Feeders                  0          0         0               0 #> Microbiota                      0          0         1               1 #> Meiofauna                       0          0         0               1 #> Deposit Feeders                 0          0         0               0 #> Predators                       0          0         0               0 #> Deposited Detritus              0          1         1               1 #>                    Predators Deposited Detritus #> Filter Feeders             1                  1 #> Microbiota                 0                  0 #> Meiofauna                  0                  1 #> Deposit Feeders            1                  1 #> Predators                  0                  1 #> Deposited Detritus         0                  0 # network stats show(s$ns) #>      n  L         C LD      ppr    lam1A mlam1A      rho         R        d #> [1,] 6 12 0.3333333  2 2.147899 2.147899      1 2.147899 0.4655712 0.147899 #>      no.scc no.scc.big      pscc #> [1,]      2          1 0.8333333"},{"path":"/articles/uncertainty_simple.html","id":"load-the-model-to-analyze","dir":"Articles","previous_headings":"","what":"Load the model to analyze","title":"Uncertainty Analysis: Simplest Example","text":"Next, lets set Uncertainty Analysis parameters .samples = 10000, number plausible models return (number samples) f.error = 25 (flow parameters percent error investigate) Now ready perform ENA uncertainty analysis. can apply selected ENA model set. use get.ns function find whole-network statistics models. can now use results. First, lets look histogram Boundary input values Total System throughflow values. code generates orange vertical line histogram indicating indicator value original model.   Beyond visualizing effects model flow parameter uncertainty ENA results, can use 95% CI make statisitcal inferences. , consider hypothesized “dominance indirect effects” (Higashi Patten 1991, Salas Borrett 2010, Borrett et al. 2016), “network homogenization” (Fath Patten 1999, Borrett Salas 2010, Borrett et al. 2016) ecosystems. , first find 95% confidence intervals network metric: construct bar plot calculated values original model add 95% CI error bars Uncertainty Analysis  results show orignial value Indirect--Direct flows ratio larger one, indicating “dominance indirect effects”; however, 95% confidence interval indicator 25% uniform uncertainty spans threshold value 1 (ranging 0.9 1.16). Thus, confident parameter exceeds interpretation threshold given level uncertainty. contast, network homogenizaiton pameter exceeds interpretation threshold 1.0, 95% CI level uncertainty suggests confident interpretation correct.","code":"data(troModels)  # load the trophic ecosystem network models include in enaR m <- troModels[[6]] # cone sping model (Kay et al. 1989; from Tilly) no.samples <- 10000 f.error = 25 m.uncertainty.list <- enaUncertainty(m,                     # original model                                  type = \"percent\",      # type of uncertainty to use                                  p.err = f.error,       # define percent error                                  iter = no.samples )    # specify the number of samples #> Warning in lsei(E = E, F = F, G = G, H = H): No equalities - setting type = 2 ns <- lapply(m.uncertainty.list, get.ns) # get ENA whole network statistics (metrics, indicators) ns <- as.data.frame(do.call(rbind, ns))  # reshape data  ns.original <- as.data.frame(get.ns(m))  # find the original model results. hist(ns$Boundary, col = \"steelblue\", border = \"white\", main = \"Total Boundary Input\") abline(v = ns.original$Boundary, col = \"orange\", lwd = 2) hist(ns$TST, col = \"blue2\", border = \"white\", main = \"Total System ThroughFLOW\") abline(v = ns.original$TST, col = \"orange\", lwd = 2) id.95ci <- quantile(ns$ID.F, probs = c(0.025, 0.975))  hmg.95ci <- quantile(ns$HMG.O, probs = c(0.025, 0.975)) opar <- par(las = 1) bp <- barplot(c(ns.original$ID.F, ns.original$HMG.O),       ylim = c(0,3),       col = \"grey\",           border = NA,           names.arg = c(\"Indirect/Direct\", \"Homogenization\")) abline(h = 1, col = \"orange\", lwd = 1.5) # threshold value  arrows(bp, c(id.95ci[1], hmg.95ci[1]),    bp, c(id.95ci[2], hmg.95ci[2]),    code = 3, lwd = 1.5, angle = 90, length = 0.2, col = \"black\")"},{"path":"/articles/uncertainty_symmetric.html","id":"use-uncertainty-analysis-to-sample-plausible-models","dir":"Articles","previous_headings":"","what":"Use Uncertainty Analysis to Sample Plausible Models","title":"Uncertainty Analysis: Symmetric Values","text":"simplest way apply enaUncertainty function assume single symmetric percent variation around network flow (see example). However, cases user might want specify differing amounts flow uncertainty model flux. example, user might want set flow uncertainty level match something like estimated standard deviation flow perhaps 95% confidence interval. key example set symmetric range flow values flow enaUncertainty() function use explore/sample space plausible models. first step example load data need provide information required uncertainty function, including uncertainty data. Notice example uncertainty data flows built separate data frame sparse matrix format model internal flows, boundary inputs, exports, respirations. Notice internal flows uncertainty data frame three columns: starting node flow, ending node flow, positive flow amount, serve upper limit flow sampled models, difference value original used create lower limit. , function assuming uncertainty amount provided larger original model. inputs, exports, respriations uncertainty data frames two columns: node effected flow amount, applied manner internal flows. can call enaUncertainty function find set plausible models system given specified flow uncertainty. Notice code executed properly, may still get warning message limSolve package (called within enaUncertainty function) states following: Warning message: lsei(E = E, F = F, G = G, H = H) : equalities - setting type = 2 ok, indicate problem code’s execution. can always check make sure plausible models generated steady-state using following, expect evaluate zero indicating models generated balanced.","code":"# load data data(troModels)     # load the set of trophic models distributed with the enaR package m <- troModels$`Cone Springs` # select the 6th model, which is the cone spring model (Kay et al. 1989; from Tilly) # internal flows f.rows=c(1,2,2,3,3,4,5,5)  # starting node f.cols=c(5,3,5,4,5,5,2,3)  # ending node f.vals=c(2220.25,18.75,400,92.5,50,41.75,1301.25,577.25)  # uncertainty values f.df=data.frame(f.rows, f.cols, f.vals)  # construct the data frame.  # inputs z.rows=c(1,5) # node number of nodes with inputs z.vals=c(2796,158.75)  # input flow values (assumed greater than originally observed values) z.df=data.frame(z.rows, z.vals)  # exports e.rows=c(1,2,5) e.vals=c(75,63.75,215) e.df=data.frame(e.rows, e.vals)  #respirations r.rows=c(1,2,3,4,5) r.vals=c(500.75,818.75,453.5,50.75,777.25) r.df=data.frame(r.rows, r.vals) # specify uncertainty function parameters  iter = 100 # the number of plausible models to return  # conduct the uncertainty analysis. plausible.sym <- enaUncertainty(x = m, type = \"sym\", iter = iter, F.sym = f.df,  z.sym = z.df, e.sym = e.df, r.sym = r.df) #> Warning in lsei(E = E, F = F, G = G, H = H): No equalities - setting type = 2 length(plausible.sym)  # should be equal to iter. #> [1] 100 iter-length(which(unlist(lapply(plausible.sym, ssCheck))==TRUE)) # number of unbalanced models #> [1] 0"},{"path":"/articles/uncertainty_symmetric.html","id":"applying-selected-ena","dir":"Articles","previous_headings":"","what":"Applying Selected ENA","title":"Uncertainty Analysis: Symmetric Values","text":"Given list plausible models, can apply network analyses models. illustrate , find whole network statistics generated enaR package. Lets see uncertainty model flows changed model inputs total system throughflow plotting results  Next, lets use 95% CI make statisitcal inferences hypothesized “dominance indirect effects” (Higashi Patten 1991, Salas Borrett 2010, Borrett et al. 2016), “network homogenization” (Fath Patten 1999, Borrett Salas 2010, Borrett et al. 2016).  results show indicate ratio indirect direct flows greater 1 model, indicates “dominance indirect effects”, 95% confidence interval includes 1 (smaller values). Thus, given level uncertainty, confident Indirect/Direct > 1 model sure indirect effects dominant. However, 95% CI homogenization parameter include 1, can conclude network homogenization occurring model.","code":"# apply selected ENA ns <- lapply(plausible.sym, get.ns) # get ENA whole network statstics (metrics, indicators) ns <- as.data.frame(do.call(rbind, ns)) ns.original <- as.data.frame(get.ns(m)) opar <- par(las = 1, mfcol = c(2,1), mar = c(4,5,3,1)) d <- density(ns$Boundary) plot(d, main = \"Total Boundary Input\", ylim=c(0,max(d$y)+(max(d$y)*0.11))) polygon(d, col = \"steelblue\") ci95 <- quantile(ns$Boundary, probs = c(0.025, 0.975))  points(x=ns.original$Boundary, y=(max(d$y)+max(d$y)*0.1),        pch=25, col='darkblue',cex=1.5,bg='darkblue') lines(x=c(ci95[1],ci95[2]),   y=c((max(d$y)+max(d$y)*0.1),(max(d$y)+max(d$y)*0.1)),   col='darkblue', lwd=2) lines(x=c(ci95[1],ci95[1]),   y=c((max(d$y)+max(d$y)*0.1)-(max(d$y)*0.02),(max(d$y)+max(d$y)*0.1)+(max(d$y)*0.02)),   col='darkblue', lwd=2) lines(x=c(ci95[2], ci95[2]),   y=c((max(d$y)+max(d$y)*0.1)-(max(d$y)*0.02),(max(d$y)+max(d$y)*0.1)+(max(d$y)*0.02)),   col='darkblue', lwd=2) legend('topleft', legend=c('original model','95% CI'),    pch=c(25,NA), lty=c(NA,1), col='darkblue',    pt.bg=c('darkblue',NA), bty='n')  d <- density(ns$TST) plot(d, main = \"Total System Throughflow\",  ylim=c(0,max(d$y)+(max(d$y)*0.11))) polygon(d, col = \"steelblue\") ci95 <- quantile(ns$TST, probs = c(0.025, 0.975)) points(x=ns.original$TST, y=(max(d$y)+max(d$y)*0.1),    pch=25, col='darkblue',cex=1.5,bg='darkblue') lines(x=c(ci95[1],ci95[2]),   y=c((max(d$y)+max(d$y)*0.1),(max(d$y)+max(d$y)*0.1)),   col='darkblue', lwd=2) lines(x=c(ci95[1],ci95[1]),   y=c((max(d$y)+max(d$y)*0.1)-(max(d$y)*0.02),(max(d$y)+max(d$y)*0.1)+(max(d$y)*0.02)),   col='darkblue', lwd=2) lines(x=c(ci95[2], ci95[2]),   y=c((max(d$y)+max(d$y)*0.1)-(max(d$y)*0.02),(max(d$y)+max(d$y)*0.1)+(max(d$y)*0.02)),   col='darkblue', lwd=2) legend('topleft', legend=c('original model','95% CI'),    pch=c(25,NA), lty=c(NA,1), col='darkblue',    pt.bg=c('darkblue',NA), bty='n') # find 95% confidence intervals id.95ci <- quantile(ns$ID.F, probs = c(0.025, 0.975)) hmg.95ci <- quantile(ns$HMG.O, probs = c(0.025, 0.975))  # barplot of the calculated values for the original model opar <- par(las = 1) bp <- barplot(c(ns.original$ID.F, ns.original$HMG.O),       ylim = c(0,3),       col = \"grey\",           border = NA,           names.arg = c(\"Indirect/Direct\", \"Homogenization\")) abline(h = 1, col = \"orange\", lwd = 1.5) # threshold value  # add 95CI error bars from Uncertainty Analysis arrows(bp, c(id.95ci[1], hmg.95ci[1]),    bp, c(id.95ci[2], hmg.95ci[2]),    code = 3, lwd = 1.5, angle = 90, length = 0.2, col = \"black\")"},{"path":"/articles/utility.html","id":"load-model","dir":"Articles","previous_headings":"","what":"Load Model","title":"Utility and Mixed Trophic Analyses","text":"can load library models select one use illustration.","code":"# load data data(enaModels)        # load library of Ecosystem Networks names(enaModels)       # view model names #>   [1] \"Marine Coprophagy (oyster)\"               #>   [2] \"Lake Findley \"                            #>   [3] \"Mirror Lake\"                              #>   [4] \"Lake Wingra\"                              #>   [5] \"Marion Lake\"                              #>   [6] \"Cone Springs\"                             #>   [7] \"Silver Springs\"                           #>   [8] \"English Channel\"                          #>   [9] \"Oyster Reef \"                             #>  [10] \"Baie de Somme\"                            #>  [11] \"Bothnian Bay\"                             #>  [12] \"Bothnian Sea\"                             #>  [13] \"Ythan Estuary\"                            #>  [14] \"Sundarban Mangrove (virgin)\"              #>  [15] \"Sundarban Mangrove (reclaimed)\"           #>  [16] \"Baltic Sea\"                               #>  [17] \"Ems Estuary\"                              #>  [18] \"Swartkops Estuary  15\"                    #>  [19] \"Southern Benguela Upwelling\"              #>  [20] \"Peruvian Upwelling\"                       #>  [21] \"Crystal River (control)\"                  #>  [22] \"Crystal River (thermal)\"                  #>  [23] \"Charca de Maspalomas Lagoon\"              #>  [24] \"Northern Benguela Upwelling\"              #>  [25] \"Swartkops Estuary\"                        #>  [26] \"Sunday Estuary\"                           #>  [27] \"Kromme Estuary\"                           #>  [28] \"Okefenokee Swamp\"                         #>  [29] \"Neuse Estuary (early summer 1997)\"        #>  [30] \"Neuse Estuary (late summer 1997) \"        #>  [31] \"Neuse Estuary (early summer 1998)\"        #>  [32] \"Neuse Estuary (late summer 1998)\"         #>  [33] \"Gulf of Maine\"                            #>  [34] \"Georges Bank\"                             #>  [35] \"Middle Atlantic Bight\"                    #>  [36] \"Narragansett Bay\"                         #>  [37] \"Southern New England Bight\"               #>  [38] \"Chesapeake Bay\"                           #>  [39] \"Mondego Estuary (Zostera sp. Meadows)\"    #>  [40] \"Mdloti Estuary (C, March 2002)\"           #>  [41] \"St. Marks Seagrass, site 1 (Jan.)\"        #>  [42] \"St. Marks Seagrass, site 1 (Feb.)\"        #>  [43] \"St. Marks Seagrass, site 2 (Jan.)\"        #>  [44] \"St. Marks Seagrass, site 2 (Feb.)\"        #>  [45] \"St. Marks Seagrass, site 3 (Jan.)\"        #>  [46] \"St. Marks Seagrass, site 4 (Feb.)\"        #>  [47] \"Sylt-Romo Bight (C)\"                      #>  [48] \"Graminoids (wet)\"                         #>  [49] \"Graminoids (dry)\"                         #>  [50] \"Cypress (wet)\"                            #>  [51] \"Cypress (dry)\"                            #>  [52] \"Lake Oneida (pre-ZM)\"                     #>  [53] \"Lake Oneida (post-ZM)\"                    #>  [54] \"Bay of Quinte (pre-ZM)\"                   #>  [55] \"Bay of Quinte (post-ZM)\"                  #>  [56] \"Mangroves (wet)\"                          #>  [57] \"Mangroves (dry)\"                          #>  [58] \"Florida Bay (wet)\"                        #>  [59] \"Florida Bay (dry)\"                        #>  [60] \"Hubbard Brook (Ca)(Waide)\"                #>  [61] \"Hardwood Forest, NH (Ca)\"                 #>  [62] \"Duglas Fir Forest, WA (Ca)\"               #>  [63] \"Duglas Fir Forest, WA (K)\"                #>  [64] \"Puerto Rican Rain Forest (Ca)\"            #>  [65] \"Puerto Rican Rain Forest (K)\"             #>  [66] \"Puerto Rican Rain Forest (Mg)\"            #>  [67] \"Puerto Rican Rain Forest (Cu)\"            #>  [68] \"Puerto Rican Rain Forest (Fe)\"            #>  [69] \"Puerto Rican Rain Forest (Mn)\"            #>  [70] \"Puerto Rican Rain Forest (Na)\"            #>  [71] \"Puerto Rican Rain Forest (Sr)\"            #>  [72] \"Tropical Rain Forest (N)\"                 #>  [73] \"Neuse River Estuary (N, AVG)\"             #>  [74] \"Neuse River Estuary (N, Spring 1985)\"     #>  [75] \"Neuse River Estuary (N, Summer 1985)\"     #>  [76] \"Neuse River Estuary (N,  Fall 1985)\"      #>  [77] \"Neuse River Estuary (N, Winter 1986)\"     #>  [78] \"Neuse River Estuary (N, Spring 1986)\"     #>  [79] \"Neuse River Estuary (N, Summer 1986)\"     #>  [80] \"Neuse River Estuary (N, Fall 1986)\"       #>  [81] \"Neuse River Estuary (N, Winter 1987)\"     #>  [82] \"Neuse River Estuary (N, Spring 1987)\"     #>  [83] \"Neuse River Estuary (N, Summer 1987)\"     #>  [84] \"Neuse River Estuary (N, Fall 1987)\"       #>  [85] \"Neuse River Estuary (N, Winter 1988)\"     #>  [86] \"Neuse River Estuary (N, Spring 1988)\"     #>  [87] \"Neuse River Estuary (N, Summer 1988)\"     #>  [88] \"Neuse River Estuary (N, Fall 1988)\"       #>  [89] \"Neuse River Estuary (N, Winter 1989)\"     #>  [90] \"Cape Fear River Estuary (N, oligohaline)\" #>  [91] \"Cape Fear River Estuary (N, polyhaline)\"  #>  [92] \"Lake Lanier (P) Averaged\"                 #>  [93] \"Great Lakes (N)\"                          #>  [94] \"Baltic Sea (N)\"                           #>  [95] \"Chesapeake Bay (N)\"                       #>  [96] \"Chesapeake Bay (P)\"                       #>  [97] \"Chesapeake Bay (P, Winter)\"               #>  [98] \"Chesapeake Bay (P, Spring)\"               #>  [99] \"Chesapeake Bay (P, Summer)\"               #> [100] \"Chesapeake Bay (P, Fall)\"                 #> [101] \"Sylt-Romo Bight (N)\"                      #> [102] \"Sylt-Romo Bight (P)\"                      #> [103] \"Beijing Urban Metabolism (C)\"             #> [104] \"Vienna Urban Metabolism (C)\" NET <- enaModels[[9]]  # select the oyster NET"},{"path":"/articles/utility.html","id":"utility-analysis","dir":"Articles","previous_headings":"","what":"Utility Analysis","title":"Utility and Mixed Trophic Analyses","text":"Next, apply utility network analysis. can examine througflow scaled integral utility matrix related sign matrix elements essentially intermediate results. “Relations.Table” summarizes key results table summarizes pairwise relationship pairwise interactions network considering just direct interactions integral interactions, consider indirect interactions well. Often indirect interactions power transform relationship different first appears. Several whole network metrics derived information. synergism.F parameter cost-benefit ratio. greater 1, indicates integral positive utility system negative utility. mutualism parameter similar ratio. greater 1 indicates integral positive relationships network negative ones. stars right hand column indicate relationship changed.","code":"u <- enaUtility(NET)  # perform the ENA flow analysis attributes(u) #> $names #> [1] \"D\"               \"SD\"              \"U\"               \"Y\"               #> [5] \"SY\"              \"Relations.Table\" \"ns\" show(u$Y)  # dimesionalized integral utiilty matrix #>                    Filter Feeders  Microbiota   Meiofauna Deposit Feeders #> Filter Feeders         34.5516009  3.21636398  1.76164548     0.002615238 #> Microbiota              2.9290686  6.05912271  0.01745223     1.096717767 #> Meiofauna               0.5320225 -1.63465748  8.02036899     0.417444025 #> Deposit Feeders        -1.1206475 -0.49779890 -0.47764506     2.286340165 #> Predators              -0.4863857  0.05982146  0.04660642    -0.154354794 #> Deposited Detritus     -9.2412030  4.47185597  2.43467798     0.166693897 #>                     Predators Deposited Detritus #> Filter Feeders      0.2895772         9.44904264 #> Microbiota          0.1746756        -4.31441404 #> Meiofauna           0.0469263        -0.79970117 #> Deposit Feeders     0.1216204         1.45166081 #> Predators           0.6693019        -0.02101919 #> Deposited Detritus -0.2985165        13.34522178 show(u$SY)  # the sign matrix assoicated with U #>                    Filter Feeders Microbiota Meiofauna Deposit Feeders #> Filter Feeders     \"+\"            \"+\"        \"+\"       \"+\"             #> Microbiota         \"+\"            \"+\"        \"+\"       \"+\"             #> Meiofauna          \"+\"            \"-\"        \"+\"       \"+\"             #> Deposit Feeders    \"-\"            \"-\"        \"-\"       \"+\"             #> Predators          \"-\"            \"+\"        \"+\"       \"-\"             #> Deposited Detritus \"-\"            \"+\"        \"+\"       \"+\"             #>                    Predators Deposited Detritus #> Filter Feeders     \"+\"       \"+\"                #> Microbiota         \"+\"       \"-\"                #> Meiofauna          \"+\"       \"-\"                #> Deposit Feeders    \"+\"       \"+\"                #> Predators          \"+\"       \"-\"                #> Deposited Detritus \"-\"       \"+\" u$Relations.Table #>                  From                 To Direct Integral changed #> 1      Filter Feeders     Filter Feeders  (0,0)    (+,+)       * #> 2      Filter Feeders         Microbiota  (0,0)    (+,+)       * #> 3      Filter Feeders          Meiofauna  (0,0)    (+,+)       * #> 4      Filter Feeders    Deposit Feeders  (0,0)    (+,-)       * #> 5      Filter Feeders          Predators  (+,-)    (+,-)       - #> 6      Filter Feeders Deposited Detritus  (+,-)    (+,-)       - #> 7          Microbiota         Microbiota  (0,0)    (+,+)       * #> 8          Microbiota          Meiofauna  (+,-)    (+,-)       - #> 9          Microbiota    Deposit Feeders  (+,-)    (+,-)       - #> 10         Microbiota          Predators  (0,0)    (+,+)       * #> 11         Microbiota Deposited Detritus  (-,+)    (-,+)       - #> 12          Meiofauna          Meiofauna  (0,0)    (+,+)       * #> 13          Meiofauna    Deposit Feeders  (+,-)    (+,-)       - #> 14          Meiofauna          Predators  (0,0)    (+,+)       * #> 15          Meiofauna Deposited Detritus  (-,+)    (-,+)       - #> 16    Deposit Feeders    Deposit Feeders  (0,0)    (+,+)       * #> 17    Deposit Feeders          Predators  (+,-)    (+,-)       - #> 18    Deposit Feeders Deposited Detritus  (+,-)    (+,+)       * #> 19          Predators          Predators  (0,0)    (+,+)       * #> 20          Predators Deposited Detritus  (+,-)    (-,-)       * #> 21 Deposited Detritus Deposited Detritus  (0,0)    (+,+)       * u$ns #>              lam1D relation.change.F synergism.F mutualism.F #> r.change 0.8991676              61.9    4.915298    2.272727"},{"path":"/articles/utility.html","id":"mixed-trophic-impacts","dir":"Articles","previous_headings":"","what":"Mixed Trophic Impacts","title":"Utility and Mixed Trophic Analyses","text":"Mixed Trophic Impacts analysis Ulanowicz Puccia (1990) executed enaMTI() function follows. Like Utility analysis, can ascertain mixed impacts (integral) M matrix. Note rounded values 3 decimal places brevity. , key results summarized Relations.Table","code":"mti <- enaMTI(NET)  # apply mixed trophic analysis  attributes(mti) #> $names #> [1] \"G\"               \"FP\"              \"Q\"               \"M\"               #> [5] \"Relations.Table\" round(mti$M,3) #>                    Filter Feeders Microbiota Meiofauna Deposit Feeders #> Filter Feeders             -0.025      0.170     0.431           0.261 #> Microbiota                 -0.002     -0.307    -0.182           0.205 #> Meiofauna                   0.000     -0.474    -0.071           0.016 #> Deposit Feeders            -0.007     -0.268    -0.007          -0.103 #> Predators                  -0.030      0.020    -0.004          -0.076 #> Deposited Detritus         -0.003      0.218     0.613           0.449 #>                    Predators Deposited Detritus #> Filter Feeders         0.796              0.516 #> Microbiota             0.050             -0.295 #> Meiofauna              0.004             -0.002 #> Deposit Feeders        0.220              0.177 #> Predators             -0.042             -0.020 #> Deposited Detritus     0.110             -0.251 mti$Relations.Table #>                  From                 To Net (direct) Mixed (integral) changed #> 1      Filter Feeders     Filter Feeders        (0,0)            (-,-)       * #> 2      Filter Feeders         Microbiota        (0,0)            (-,+)       * #> 3      Filter Feeders          Meiofauna        (0,0)            (-,+)       * #> 4      Filter Feeders    Deposit Feeders        (0,0)            (-,+)       * #> 5      Filter Feeders          Predators        (-,+)            (-,+)       - #> 6      Filter Feeders Deposited Detritus        (0,+)            (-,+)       * #> 7          Microbiota         Microbiota        (0,0)            (-,-)       * #> 8          Microbiota          Meiofauna        (-,+)            (-,-)       * #> 9          Microbiota    Deposit Feeders        (-,+)            (-,+)       - #> 10         Microbiota          Predators        (0,0)            (+,+)       * #> 11         Microbiota Deposited Detritus        (+,-)            (+,-)       - #> 12          Meiofauna          Meiofauna        (0,0)            (-,-)       * #> 13          Meiofauna    Deposit Feeders        (-,+)            (-,+)       - #> 14          Meiofauna          Predators        (0,0)            (-,+)       * #> 15          Meiofauna Deposited Detritus        (+,-)            (+,-)       - #> 16    Deposit Feeders    Deposit Feeders        (0,0)            (-,-)       * #> 17    Deposit Feeders          Predators        (-,+)            (-,+)       - #> 18    Deposit Feeders Deposited Detritus        (+,+)            (+,+)       - #> 19          Predators          Predators        (0,0)            (-,-)       * #> 20          Predators Deposited Detritus        (0,+)            (+,-)       * #> 21 Deposited Detritus Deposited Detritus        (0,0)            (-,-)       *"},{"path":"/articles/vizualizing.html","id":"simple-plot","dir":"Articles","previous_headings":"","what":"Simple Plot","title":"Vizualizing your Network","text":"can create simple plot model default graphics parameters ","code":"# Set the random seed to control plot output set.seed(2)  # this is only used to ensure our plots look the same.   # Plot network data object (uses plot.network) plot(m)"},{"path":"/articles/vizualizing.html","id":"fancy-plot","dir":"Articles","previous_headings":"","what":"Fancy Plot","title":"Vizualizing your Network","text":"can create fancier plot exerting control plotting parameters. example.","code":"## Set colors to use   my.col <- c('red','yellow',rgb(204,204,153,maxColorValue=255),'grey22')   ## Extract flow information for later use.   F <- as.matrix(m,attrname='flow')   ## Get indices of positive flows   f <- which(F!=0, arr.ind=T)   opar <- par(las=1,bg=my.col[4],xpd=TRUE,mai=c(1.02, 0.62, 0.82, 0.42))   ## Set the random seed to control plot output   set.seed(2)   plot(m,   ## Scale nodes with storage        vertex.cex=log(m%v%'storage'),   ## Add node labels        label= m%v%'vertex.names',        boxed.labels=FALSE,        label.cex=0.65,   ## Make rounded nodes        vertex.sides=45,   ## Scale arrows to flow magnitude        edge.lwd=log10(abs(F[f])),        edge.col=my.col[3],        vertex.col=my.col[1],        label.col='white',        vertex.border = my.col[3],        vertex.lty = 1,        xlim=c(-4,1),ylim=c(-2,-2))"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew K. Lau. Author, maintainer. S.R. Borrett. Author. D.E. Hines. Author. P. Singh. Author. Andy Beet. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lau M, Borrett S, Hines D, Singh P (2025). enaR: Tools Ecological Network Analysis. R package version 3.1.0, https://github.com/SEELab/enaR.","code":"@Manual{,   title = {enaR: Tools for Ecological Network Analysis},   author = {Matthew K. Lau and S.R. Borrett and D.E. Hines and P. Singh},   year = {2025},   note = {R package version 3.1.0},   url = {https://github.com/SEELab/enaR}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Ecological Network Analysis","text":"can install development version enaR like :","code":"remotes::install_github(\"SEELab/enaR\")"},{"path":"/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage","title":"Tools for Ecological Network Analysis","text":"Load model set models included package generate full set ENA metrics indicators: can now explore many metrics produced model, structural aspects model: -depth introduction ENA use enaR package, can view website","code":"library(enaR) data(enaModels) model <- enaModels[[8]] model.ena <- enaAll(model) model.ena$structure #> $A #>               PHYTOPLANKTON ZOOPLANKTON PELAGIC FISH BENTHIC FAUNA #> PHYTOPLANKTON             0           1            0             1 #> ZOOPLANKTON               0           0            1             1 #> PELAGIC FISH              0           0            0             0 #> BENTHIC FAUNA             0           0            0             0 #> DEMERSAL FISH             0           0            0             0 #> BACTERIA                  0           0            0             0 #>               DEMERSAL FISH BACTERIA #> PHYTOPLANKTON             0        0 #> ZOOPLANKTON               0        1 #> PELAGIC FISH              0        1 #> BENTHIC FAUNA             1        1 #> DEMERSAL FISH             0        1 #> BACTERIA                  0        0 #>  #> $ns #>      n L    C  LD ppr lam1A mlam1A rho  R   d no.scc no.scc.big pscc #> [1,] 6 9 0.25 1.5 NaN     0      6  NA NA 1.5      6          0    0"},{"path":"/reference/EcoNetWeb.html","id":null,"dir":"Reference","previous_headings":"","what":"Access example EcoNet models from the EcoNet website. — EcoNetWeb","title":"Access example EcoNet models from the EcoNet website. — EcoNetWeb","text":"function allows user access models presented website EcoNet, web-based interface conducting ENA (http://eco.engr.uga.edu/), Caner Kazanci University Georgia.","code":""},{"path":"/reference/EcoNetWeb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access example EcoNet models from the EcoNet website. — EcoNetWeb","text":"","code":"EcoNetWeb(   model.name = \"prompt\",   url = \"http://eco.engr.uga.edu/Examples/examples.html\" )"},{"path":"/reference/EcoNetWeb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access example EcoNet models from the EcoNet website. — EcoNetWeb","text":"model.name model accessed. 'prompt' user asked model wish use. Can also number model name model. url URL EcoNet examples.","code":""},{"path":"/reference/EcoNetWeb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access example EcoNet models from the EcoNet website. — EcoNetWeb","text":"Returns model formatted network object.","code":""},{"path":"/reference/EcoNetWeb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Access example EcoNet models from the EcoNet website. — EcoNetWeb","text":"Kazanci, C., 2007. EcoNet: new software ecological modeling, simulation network analysis, Ecol. Model., Vol 208/1 pp 3-8.","code":""},{"path":[]},{"path":"/reference/EcoNetWeb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access example EcoNet models from the EcoNet website. — EcoNetWeb","text":"Matthew K. Lau","code":""},{"path":"/reference/ShannonDiversity.html","id":null,"dir":"Reference","previous_headings":"","what":"ShannonDiversity Shannon Diversity Metrics — ShannonDiversity","title":"ShannonDiversity Shannon Diversity Metrics — ShannonDiversity","text":"Calculates number metrics based Shannon information entropy measure diversity vector, x.","code":""},{"path":"/reference/ShannonDiversity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ShannonDiversity Shannon Diversity Metrics — ShannonDiversity","text":"","code":"ShannonDiversity(x)"},{"path":"/reference/ShannonDiversity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ShannonDiversity Shannon Diversity Metrics — ShannonDiversity","text":"x 1 x n vector.","code":""},{"path":"/reference/ShannonDiversity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ShannonDiversity Shannon Diversity Metrics — ShannonDiversity","text":"H Shannon entropy-based metric diversity.  captures effects richnes (length vector, n) evenennes distribution. Hmax maximum possible value H given vector length n provided. Hr Relative evenness Hr = H/Hmax Hcentral centralization concentration values among n elements n Number elements vector. effective.n effective number elements vector, given distribution relative weights.","code":""},{"path":"/reference/ShannonDiversity.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"ShannonDiversity Shannon Diversity Metrics — ShannonDiversity","text":"formulation Shannon Diversity uses natural logarithm.  natural logarithm zero undefined, input vector contain zeros.  Analytically, two approaches dealing issue vector contains zeros.  First, can apply analysis non-zero elements.  Second, can add tiny amount elements zero elements now small numbers, relative original vector values.","code":""},{"path":"/reference/ShannonDiversity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ShannonDiversity Shannon Diversity Metrics — ShannonDiversity","text":"Stuart R. Borrett","code":""},{"path":"/reference/ShannonDiversity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ShannonDiversity Shannon Diversity Metrics — ShannonDiversity","text":"","code":"data(oyster)  ## throughflow diversity T <- enaFlow(oyster)$T ShannonDiversity(T) #>           H        Hmax          Hr    Hcentral           n effective.n  #>   1.3042705   1.7917595   0.7279272   0.2720728   6.0000000   3.6849998   ## storage (biomass) biodiversity ## X <- oyster %v% \"storage\" ## ShannonDiversity(X)"},{"path":"/reference/TES.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the Total Environ Storage — TES","title":"Calculates the Total Environ Storage — TES","text":"Calculates total storage n input output environs. function calculates storage unit input (output) realized input (output) environs.  Realized uses observed inputs (outputs) rather assumed unit input (output) node.","code":""},{"path":"/reference/TES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the Total Environ Storage — TES","text":"","code":"TES(x, balance.override = FALSE)"},{"path":"/reference/TES.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the Total Environ Storage — TES","text":"x network object. balance.override LOGICAL: balancing ignored.","code":""},{"path":"/reference/TES.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the Total Environ Storage — TES","text":"realized.input input oriented, realized storage environ. realized.output output oriented, realized storage environ. unit.input input oriented, unit storage environ. unit.output input oriented, unit storage environ.","code":""},{"path":"/reference/TES.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates the Total Environ Storage — TES","text":"Matis, J.H. Patten, B.C. 1981.  Environ analysis linear compartmenal systems: static, time invariant case.  Bulletin International Statistical Institute. 48, 527–565.","code":""},{"path":[]},{"path":"/reference/TES.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates the Total Environ Storage — TES","text":"Matthew K. Lau Stuart R. Borrett David E. Hines","code":""},{"path":"/reference/TES.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the Total Environ Storage — TES","text":"","code":"data(troModels) tes <- TES(troModels[[6]]) tes #> $realized.input #>           PLANTS         BACTERIA DETRITUS FEEDERS       CARNIVORES  #>            285.0            117.0             60.0             17.0  #>         DETRITUS  #>           3579.4  #>  #> $realized.output #> [1] 3806.6021    0.0000    0.0000    0.0000  251.7979 #>  #> $unit.input #>           PLANTS         BACTERIA DETRITUS FEEDERS       CARNIVORES  #>       0.12061231       0.03911968       0.05421812       0.04917124  #>         DETRITUS  #>       1.50458176  #>  #> $unit.output #>           PLANTS         BACTERIA DETRITUS FEEDERS       CARNIVORES  #>       0.34036142       0.14571606       0.09334199       0.22492127  #>         DETRITUS  #>       0.39653216  #>"},{"path":"/reference/TET.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Total Environ Throughflow — TET","title":"Calculate the Total Environ Throughflow — TET","text":"Determines total environ throughflow (TET) 2 x n environs selected network model. returns TET calculated unit input (output) vector observed realized input (output) vector.","code":""},{"path":"/reference/TET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Total Environ Throughflow — TET","text":"","code":"TET(x, balance.override = FALSE)"},{"path":"/reference/TET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Total Environ Throughflow — TET","text":"x network object. balance.override Logical: function work model steady-state?","code":""},{"path":"/reference/TET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Total Environ Throughflow — TET","text":"realized.input vector n realized total environ throughflows n input oriented environs. realzied.output vector n realized total environ throughflows n ouptut oriented environs. unit.input vector n unit total environ throughflows n input oriented environs. unit.output vector n unit total environ throughflows n output oriented environs.","code":""},{"path":"/reference/TET.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the Total Environ Throughflow — TET","text":"Gattie, D.K., Schramski, J.R., Borrett, S.R., Patten, B.C., Bata, S.., Whipple, S.J. 2006. Indirect effects distributed control ecosystems: Network environ analysis seven-compartment model nitrogen flow Neuse River Estuary, USA—Steady-state analysis. Ecol. Model. 194:162–177. Whipple, S.J., Borrett, S.R., Patten, B.C., Gattie, D.K., Schramski, J.R., Bata, S.. 2007.  Indirect effects distributed control ecosystems: Comparative network environ analysis seven-compartment model nitrogen flow Neuse River Estuary, USA—Time series analysis. Ecol. Model. 206: 1–17.","code":""},{"path":[]},{"path":"/reference/TET.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the Total Environ Throughflow — TET","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/TET.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Total Environ Throughflow — TET","text":"","code":"data(troModels) tet <- TET(troModels[[6]]) #> Warning: NOTE: output of functions from a particular analytical school will be returned in the standard orientation of that school. tet #> $realized.input #> [1]  2303.000 11880.010  6161.980   892.571  9388.439 #>  #> $realized.output #> [1] 29328.641     0.000     0.000     0.000  1297.359 #>  #> $unit.input #> [1] 1.000000 3.365442 3.396902 4.396902 2.365442 #>  #> $unit.output #> [1] 2.622375 1.649215 1.469720 1.922149 2.043085 #>"},{"path":"/reference/as.bipartite.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a network object (unipartite) to a two-mode (bipartite) network representation. — as.bipartite","title":"Converts a network object (unipartite) to a two-mode (bipartite) network representation. — as.bipartite","text":"Bipartite network approaches often used analyzing structure interactions among species communities.  Although typically ecosystem networks handled using unipartite representation, anlayzing bipartite perspective may informative. function provides easy means converting bipartite representation long natural division categorize species distinct modes.","code":""},{"path":"/reference/as.bipartite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a network object (unipartite) to a two-mode (bipartite) network representation. — as.bipartite","text":"","code":"as.bipartite(x = \"network object\", y = \"membership vector\")"},{"path":"/reference/as.bipartite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a network object (unipartite) to a two-mode (bipartite) network representation. — as.bipartite","text":"x network object. y vector membership values.","code":""},{"path":"/reference/as.bipartite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a network object (unipartite) to a two-mode (bipartite) network representation. — as.bipartite","text":"Returns matrix species one mode arrayed rows columns.","code":""},{"path":"/reference/as.bipartite.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Converts a network object (unipartite) to a two-mode (bipartite) network representation. — as.bipartite","text":"Matthew K. Lau","code":""},{"path":"/reference/as.bipartite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a network object (unipartite) to a two-mode (bipartite) network representation. — as.bipartite","text":"","code":"data(oyster) as.bipartite(oyster, gl(2, 3)) #>                Deposit Feeders Predators Deposited Detritus #> Filter Feeders          0.0000    0.5135            15.7910 #> Microbiota              1.2060    0.0000             0.0000 #> Meiofauna               0.6609    0.0000             4.2403"},{"path":"/reference/as.extended.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Extended Format Matrix — as.extended","title":"Create an Extended Format Matrix — as.extended","text":"Converts network object extended format Allesina Bondavalli (2003).  Used balance function.","code":""},{"path":"/reference/as.extended.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Extended Format Matrix — as.extended","text":"","code":"as.extended(x, zero.na = TRUE)"},{"path":"/reference/as.extended.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Extended Format Matrix — as.extended","text":"x network object. zero.na Logical: NA's replaced zeros?","code":""},{"path":"/reference/as.extended.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Extended Format Matrix — as.extended","text":"Returns extended format matrix.","code":""},{"path":"/reference/as.extended.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create an Extended Format Matrix — as.extended","text":"Allesina, S., Bondavalli, C., 2003. Steady state ecosystem flow networks: comparison balancing procedures.Ecological Modelling 165(2-3):231-239.","code":""},{"path":[]},{"path":"/reference/as.extended.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an Extended Format Matrix — as.extended","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/as.extended.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Extended Format Matrix — as.extended","text":"","code":"data(troModels) as.extended(troModels[[6]]) #>                  PLANTS BACTERIA DETRITUS FEEDERS CARNIVORES DETRITUS export #> PLANTS                0        0                0          0     8881    300 #> BACTERIA              0        0               75          0     1600    255 #> DETRITUS FEEDERS      0        0                0        370      200      0 #> CARNIVORES            0        0                0          0      167      0 #> DETRITUS              0     5205             2309          0        0    860 #>                       0        0                0          0        0      0 #>                       0        0                0          0        0      0 #> import            11184        0                0          0      635      0 #>                  respiration   #> PLANTS                  2003 0 #> BACTERIA                3275 0 #> DETRITUS FEEDERS        1814 0 #> CARNIVORES               203 0 #> DETRITUS                3109 0 #>                            0 0 #>                            0 0 #> import                     0 0"},{"path":"/reference/bal.html","id":null,"dir":"Reference","previous_headings":"","what":"Balancing by Either Inputs or Outputs — bal","title":"Balancing by Either Inputs or Outputs — bal","text":"Dependency balance function.","code":""},{"path":"/reference/bal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balancing by Either Inputs or Outputs — bal","text":"","code":"bal(T.star = \"matrix\", method = c(\"input\", \"output\"))"},{"path":"/reference/bal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balancing by Either Inputs or Outputs — bal","text":"T.star Extended, unbalanced matrix. method Balance inputs outputs.","code":""},{"path":"/reference/bal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balancing by Either Inputs or Outputs — bal","text":"Returns extended matrix balancing inputs outputs.","code":""},{"path":"/reference/bal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Balancing by Either Inputs or Outputs — bal","text":"Fath, B.D. S.R. Borrett. 2006. MATLAB function network environ analysis. Environmental Modelling & Software 21:375-405.","code":""},{"path":[]},{"path":"/reference/bal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Balancing by Either Inputs or Outputs — bal","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/balance.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance Flow Network Models — balance","title":"Balance Flow Network Models — balance","text":"Applies methods Allesina Bondavalli (2003) balancing flow network models.","code":""},{"path":"/reference/balance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance Flow Network Models — balance","text":"","code":"balance(x, method = c(\"AVG2\", \"AVG\", \"IO\", \"OI\", \"I\", \"O\"), tol = 5)"},{"path":"/reference/balance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance Flow Network Models — balance","text":"x network object. method Methods model balancing, see Allesina Bondavalli (2003). tol Percent error tolerance used steady state check prior balancing.","code":""},{"path":"/reference/balance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance Flow Network Models — balance","text":"Returns network object balanced flow network model.","code":""},{"path":"/reference/balance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Balance Flow Network Models — balance","text":"Allesina, S., Bondavalli, C., 2003. Steady state ecosystem flow networks: comparison balancing procedures. Ecological Modelling 165(2-3):231-239.","code":""},{"path":[]},{"path":"/reference/balance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Balance Flow Network Models — balance","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/balance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance Flow Network Models — balance","text":"","code":"data(troModels) balance(troModels[[6]]) #> [1] BALANCED #>  Network attributes: #>   vertices = 5  #>   directed = TRUE  #>   hyper = FALSE  #>   loops = TRUE  #>   multiple = FALSE  #>   bipartite = FALSE  #>   balanced = TRUE  #>   total edges= 8  #>     missing edges= 0  #>     non-missing edges= 8  #>  #>  Vertex attribute names:  #>     export input living output respiration storage vertex.names  #>  #>  Edge attribute names:  #>     flow"},{"path":"/reference/bcratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the Ratio of Positive to Negative Elements in a Network — bcratio","title":"Calculates the Ratio of Positive to Negative Elements in a Network — bcratio","text":"Dependent function enaUtility function.","code":""},{"path":"/reference/bcratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the Ratio of Positive to Negative Elements in a Network — bcratio","text":"","code":"bcratio(x = \"matrix\")"},{"path":"/reference/bcratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the Ratio of Positive to Negative Elements in a Network — bcratio","text":"x matrix flow values.","code":""},{"path":"/reference/bcratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the Ratio of Positive to Negative Elements in a Network — bcratio","text":"Returns ratio positive negative elements flow matrix.","code":""},{"path":"/reference/bcratio.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates the Ratio of Positive to Negative Elements in a Network — bcratio","text":"Fath, B.D. S.R. Borrett. 2006. MATLAB function network environ analysis. Environmental Modelling & Software 21:375-405.","code":""},{"path":[]},{"path":"/reference/bcratio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates the Ratio of Positive to Negative Elements in a Network — bcratio","text":"Stuart R. Borrett","code":""},{"path":"/reference/bgcModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Bigeochemical Cycling Models — bgcModels","title":"Bigeochemical Cycling Models — bgcModels","text":"set 43 biogeochemical cycling models compiled SEE Lab UNCW.","code":""},{"path":"/reference/bgcModels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bigeochemical Cycling Models — bgcModels","text":"Borrett, S. R., M. K. Lau. Prep. enaR: R package Ecological Network Analysis. Ecological Modeling Software.","code":""},{"path":"/reference/cycliv.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of Feeding Cycles in a Network — cycliv","title":"Analysis of Feeding Cycles in a Network — cycliv","text":"Performs full cycle analysis living subset network based algorithm described Ulanowicz (1983) implemented NETWRK 4.2b. returns data.frames details simple cycles nexus, vectors Cycle distributions Normalized distribution matrices Residual Flows Aggregated Cycles.","code":""},{"path":"/reference/cycliv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of Feeding Cycles in a Network — cycliv","text":"","code":"cycliv(x)"},{"path":"/reference/cycliv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of Feeding Cycles in a Network — cycliv","text":"x network object.  includes weighted flows node. must also include \"Living\" vector identifies living (TRUE/FALSE) status node. Also, non-living nodes must placed end node vector. function netOrder can used reorder network .","code":""},{"path":"/reference/cycliv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis of Feeding Cycles in a Network — cycliv","text":"Table.cycle data.frame presents details simple cycles network. contains \"CYCLE\" cycle number, \"NEXUS\" nexus number corresponding cycle, \"NODES\" nodes constituting cycle Table.nexus data.frame presents different nexuses characterized corresponding weak arcs. contains \"NEXUS\" nexus number, \"CYCLES\" number simple cycles present Nexus, \"W.arc.\" starting node corresponding weak arc, \"W.arc.\" ending node corresponding weak arc \"W.arc.Flow\" flow weak arc CycleDist vector Cycle Distribution gives flow cycling loops different sizes NormDist vector Normalized Distribution .e. Cycle Distribution normalized Total System Throughput network ResidualFlows matrix straight-(acyclic) flows network AggregatedCycles matrix Aggregated Biogeochemical Cycles network ns vector full cycle analysis based network statistics. include \"NCYCS\" number simple cycles identified network, \"NNEX\" number disjoint cycles number Nexuses detected network \"CI\" cycling index network.","code":""},{"path":"/reference/cycliv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis of Feeding Cycles in a Network — cycliv","text":"function uses mechanism analysis used enaCycle function restricted living nodes . Also, similar enaCycle function, number cycles nexus 50, \"Table.cycle\" blank line 50 cycles followed cycles next nexus. analysis requires non-living nodes placed end network object.","code":""},{"path":"/reference/cycliv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analysis of Feeding Cycles in a Network — cycliv","text":"D.B. 1975. Finding elementary circuits directed graph. SIAM J. Comput. 4:77–84 Ulanowicz, R.E. 1983. Identifying structure cycling ecosystems. Methematical Biosciences 65:219–237 Ulanowicz, R.E. Kay, J.J. 1991. package analysis ecosystem flow networks. Environmental Software 6:131 – 142.","code":""},{"path":[]},{"path":"/reference/cycliv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analysis of Feeding Cycles in a Network — cycliv","text":"Pawandeep Singh","code":""},{"path":"/reference/eigenCentrality.html","id":null,"dir":"Reference","previous_headings":"","what":"the Eigen Centrality of a Network — eigenCentrality","title":"the Eigen Centrality of a Network — eigenCentrality","text":"Calculates centrality network using eigen vectors.","code":""},{"path":"/reference/eigenCentrality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the Eigen Centrality of a Network — eigenCentrality","text":"","code":"eigenCentrality(x = \"matrix\")"},{"path":"/reference/eigenCentrality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the Eigen Centrality of a Network — eigenCentrality","text":"x matrix defining network graph.","code":""},{"path":"/reference/eigenCentrality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the Eigen Centrality of a Network — eigenCentrality","text":"Returns eigen based centrality network.","code":""},{"path":"/reference/eigenCentrality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"the Eigen Centrality of a Network — eigenCentrality","text":"Bonacich, P., 1987. Power centrality: family measures. American Journal Sociology 92: 1170-1182.","code":""},{"path":"/reference/eigenCentrality.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"the Eigen Centrality of a Network — eigenCentrality","text":"Stuart R. Borrett Matthew K. Lau","code":""},{"path":"/reference/enaAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct All Major ENA — enaAll","title":"Conduct All Major ENA — enaAll","text":"Conducts major ENA default settings returns output named list.","code":""},{"path":"/reference/enaAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct All Major ENA — enaAll","text":"","code":"enaAll(x = \"network object\")"},{"path":"/reference/enaAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct All Major ENA — enaAll","text":"x network object.","code":""},{"path":"/reference/enaAll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct All Major ENA — enaAll","text":"ascendency enaAscendency control enaControl environ enaEnviron flow enaFlow mti enaMTI storage enaStorage structure enaStructure utility enaUtility eigen.check=FALSE","code":""},{"path":[]},{"path":"/reference/enaAll.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conduct All Major ENA — enaAll","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/enaAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conduct All Major ENA — enaAll","text":"","code":"data(troModels) output = enaAll(troModels[[6]]) names(output) #> [1] \"ascendency\" \"control\"    \"environ\"    \"flow\"       \"mti\"        #> [6] \"storage\"    \"structure\"  \"utility\""},{"path":"/reference/enaAscendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the Ascendency of an Ecological Network — enaAscendency","title":"Calculates the Ascendency of an Ecological Network — enaAscendency","text":"Calculates average mutual information (AMI), ascendency, overhead, capacity input-output networks.  also returns ratios ascendency overhead capacity. metrics describe organization flow ecological network (Ulanowicz 1997).","code":""},{"path":"/reference/enaAscendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the Ascendency of an Ecological Network — enaAscendency","text":"","code":"enaAscendency(x = \"network object\")"},{"path":"/reference/enaAscendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the Ascendency of an Ecological Network — enaAscendency","text":"x network object.","code":""},{"path":"/reference/enaAscendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the Ascendency of an Ecological Network — enaAscendency","text":"H Total flow diversity (MacArthur 1955).  Uses Shannon Information measure (aka Boltzmann entropy) applied individual flows. AMI Returns Average Mutual Information (AMI) network. AMI provides measure constraints placed given peice energy matter moving network (Patricio et al. 2006) Hr Residual uncertainty remains flow distribution ecosystem structure specified (Hr = H - AMI). ASC Returns ascendnecy network.  Ascendency scaled form AMI relative total system throughput (Ulanowicz 1997; 2004).  Total system throughput sum activity network (Kay et al. 1989). OH Returns overhead network.  Overhead proportion capacity network used ascendency (Ulanowicz 2004). CAP Returns capacity network.  Capacity defined sum ascendency overhead (Ulanowicz 2004). ACS.CAP Returns proportion capacity used ascendency. OH.CAP Returns proportion capacity used overhead. robustness Returns robustness network. ELD Returns Effective Link Density network(c) (Ulanowicz et al. 2014). TD Returns Trophic Depth network(r) (Ulanowicz et al. 2014). .input Returns input ascendnecy network. .internal Returns internal ascendnecy network. .export Returns export ascendnecy network. .respiration Returns respiration ascendnecy network. OH.input Returns input overhead network. OH.internal Returns internal overhead network. OH.export Returns export overhead network. OH.respiration Returns respiration overhead network. CAP.input Returns input capacity network. CAP.internal Returns internal capacity network. CAP.export Returns export capacity network. CAP.respiration Returns respiration capacity network.","code":""},{"path":"/reference/enaAscendency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the Ascendency of an Ecological Network — enaAscendency","text":"Ulanowicz school functions require export respiration components output separately quantified.","code":""},{"path":"/reference/enaAscendency.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates the Ascendency of an Ecological Network — enaAscendency","text":"Kay, J.J., Graham, L.., Ulanowicz, R.E., 1989. detailed guide network analysis. p. 15-61 : Wulff, F., Field, J.G., Man, K.H. (eds.) Network analysis marine ecology. Coastal Estuarine Study Serries. Springer-Verlag, Berlin. Patrico, J., Ulanowicz, R.E., Pardal, M.., Marques J.C., 2004. Ascendency ecological indicator: case study estuarine pulse eutrophication. Estuar. Coast Shelf S. 60, 23-35. Ulanowicz, R.E. Norden, J.S., 1990. Symmetrical overhead flow networks. International Journal Systems Science, 21(2), pp.429-437. Ulanowicz, R.E., 1997. Ecology, Ascendent Perspective. Columbia University Press, New York. Ulanowicz, R.E., 2004. Quantitative methods ecological network analysis. Comput. Biol. Chem. 28, 321-33 Ulanowicz, R.E., Holt, R.D., Barfield, M., 2014. Limits ecosystem trophic complexity: insights ecological network analysis. Ecology Letters 17:127-136","code":""},{"path":[]},{"path":"/reference/enaAscendency.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates the Ascendency of an Ecological Network — enaAscendency","text":"David E. Hines Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/enaAscendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the Ascendency of an Ecological Network — enaAscendency","text":"","code":"data(troModels) enaAscendency(troModels[[6]]) #>            H      AMI       Hr      CAP      ASC       OH   ASC.CAP    OH.CAP #> [1,] 3.20096 1.336447 1.864513 135864.7 56725.49 79139.25 0.4175144 0.5824856 #>      robustness      ELD       TD  A.input A.internal A.export A.respiration #> [1,]  0.3646722 1.908258 2.525286 19147.85   29331.98 1051.765      7193.894 #>      OH.input OH.internal OH.export OH.respiration CAP.input CAP.internal #> [1,] 6221.751    29832.46  7810.812       35274.22   25369.6     59164.44 #>      CAP.export CAP.respiration #> [1,]   8862.578        42468.11"},{"path":"/reference/enaControl.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Analyses of Ecological Networks — enaControl","title":"Control Analyses of Ecological Networks — enaControl","text":"Analyses analyzing control amongst nodes ecological networks.","code":""},{"path":"/reference/enaControl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Analyses of Ecological Networks — enaControl","text":"","code":"enaControl(x, zero.na = TRUE, balance.override = FALSE)"},{"path":"/reference/enaControl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Analyses of Ecological Networks — enaControl","text":"x network object. zero.na Makes undefined (NA) values zero. balance.override Turns balancing checks network balance.","code":""},{"path":"/reference/enaControl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Analyses of Ecological Networks — enaControl","text":"CN Control matrix using flow values. CQ Control matrix using storage values. CR Schramski Control Ratio Matrix CD Schramski Control Difference Matrix CA Control Allocation Matrix CDep Control Dependency Matrix sc Schramski System Control vector scp Schramski system control vector percent total control ns vector network-level summary statistics","code":""},{"path":"/reference/enaControl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Control Analyses of Ecological Networks — enaControl","text":"Fath, B. D., Borrett, S. R. 2006. MATLAB function Network Environ Analysis.  Environmental Modelling & Software 21:375-405 Schramski, J.R., Gattie, D.K., Patten, B.C., Borrett S.R., Fath, B.D., Thomas, C.R., Whipple, S.J. 2006. Indirect effects distributed control ecosystems: Distributed control environ networks seven compartment model nitrogen flow Neuse River Estuary, USA Steady-state analysis. Ecological Modelling 194:189-201 Schramski, J.R., Gattie, D.K., Patten, B.C., Borrett S.R., Fath, B.D., Whipple, S.J. 2007. Indirect effects distributed control ecosystems: Distributed control environ networks seven compartment model nitrogen flow Neuse River Estuary, USA Time series analysis. Ecological Modelling 206:18-30 Chen, S., Fath, B.D., Chen, B. 2011. Information-based network environ analysis: system perspective ecologcial risk assessment.  Ecol. Ind. 11:1664-1672. Chen, S. Chen, B. 2015. Urban energy consumption: Different insights energy flow analysis, input-output analysis ecological network analysis.  Applied Energy 138:99-107.","code":""},{"path":[]},{"path":"/reference/enaControl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Control Analyses of Ecological Networks — enaControl","text":"Matthew K. Lau Stuart R. Borrett Pawandeep Singh","code":""},{"path":"/reference/enaControl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control Analyses of Ecological Networks — enaControl","text":"","code":"data(troModels) enaControl(troModels[[6]]) #> $CN #>                  PLANTS  BACTERIA DETRITUS FEEDERS CARNIVORES  DETRITUS #> PLANTS                0 0.0000000         0.000000  0.0000000 0.0000000 #> BACTERIA              1 0.0000000         0.000000  0.1865961 0.6903851 #> DETRITUS FEEDERS      1 0.5806865         0.000000  0.0000000 0.8460570 #> CARNIVORES            1 0.0000000         0.891124  0.0000000 0.5486486 #> DETRITUS              1 0.0000000         0.000000  0.0000000 0.0000000 #>  #> $CQ #>                  PLANTS  BACTERIA DETRITUS FEEDERS CARNIVORES  DETRITUS #> PLANTS                0 0.0000000         0.000000  0.0000000 0.0000000 #> BACTERIA              1 0.0000000         0.000000  0.1865961 0.6903851 #> DETRITUS FEEDERS      1 0.5806865         0.000000  0.0000000 0.8460570 #> CARNIVORES            1 0.0000000         0.891124  0.0000000 0.5486486 #> DETRITUS              1 0.0000000         0.000000  0.0000000 0.0000000 #>  #> $CD #>                         PLANTS      BACTERIA DETRITUS FEEDERS    CARNIVORES #> PLANTS            0.000000e+00  8.344691e-05     8.344691e-05  8.344691e-05 #> BACTERIA         -8.344691e-05  0.000000e+00     2.240311e-05 -8.850401e-06 #> DETRITUS FEEDERS -8.344691e-05 -2.240311e-05     0.000000e+00  3.882096e-04 #> CARNIVORES       -8.344691e-05  8.850401e-06    -3.882096e-04  0.000000e+00 #> DETRITUS         -8.344691e-05  7.254992e-05     8.890890e-05  5.765539e-05 #>                       DETRITUS #> PLANTS            8.344691e-05 #> BACTERIA         -7.254992e-05 #> DETRITUS FEEDERS -8.890890e-05 #> CARNIVORES       -5.765539e-05 #> DETRITUS          0.000000e+00 #>  #> $CR #>                  PLANTS   BACTERIA DETRITUS FEEDERS CARNIVORES   DETRITUS #> PLANTS                0  1.0000000        1.0000000  1.0000000  1.0000000 #> BACTERIA             -1  0.0000000        0.5806865 -0.1865961 -0.6903851 #> DETRITUS FEEDERS     -1 -0.5806865        0.0000000  0.8911240 -0.8460570 #> CARNIVORES           -1  0.1865961       -0.8911240  0.0000000 -0.5486486 #> DETRITUS             -1  0.6903851        0.8460570  0.5486486  0.0000000 #>  #> $CA #>      PLANTS  BACTERIA DETRITUS FEEDERS CARNIVORES  DETRITUS #> [1,]      0 0.2677194        0.1226211 0.01903096 0.5906285 #> [2,]      0 0.0000000        1.0000000 0.00000000 0.0000000 #> [3,]      0 0.0000000        0.0000000 1.00000000 0.0000000 #> [4,]      0 1.0000000        0.0000000 0.00000000 0.0000000 #> [5,]      0 0.6181272        0.3469538 0.03491900 0.0000000 #>  #> $CDep #>      PLANTS  BACTERIA DETRITUS FEEDERS CARNIVORES DETRITUS #> [1,]      0 0.0000000        0.0000000  0.0000000        0 #> [2,]      0 0.0000000        0.0622461  0.0000000        0 #> [3,]      0 0.0000000        0.0000000  0.3093601        0 #> [4,]      0 0.2352179        0.0000000  0.0000000        0 #> [5,]      0 0.3940869        0.2212004  0.0222626        0 #>  #> $sc #>           PLANTS         BACTERIA DETRITUS FEEDERS       CARNIVORES  #>     0.0003337877    -0.0001424441     0.0001934507    -0.0005204615  #>         DETRITUS  #>     0.0001356673  #>  #> $psc #>           PLANTS         BACTERIA DETRITUS FEEDERS       CARNIVORES  #>         50.35221        -21.48784         29.18223        -78.51216  #>         DETRITUS  #>         20.46555  #>  #> $ns #>          TSC  #> 0.0006629056  #>"},{"path":"/reference/enaCycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Full Cycle Analysis of Ecological Networks — enaCycle","title":"Full Cycle Analysis of Ecological Networks — enaCycle","text":"performs full cycle analysis network based algorithm described Ulanowicz (1983) implemented NETWRK 4.2b. returns data.frames details simple cycles nexus, vectors Cycle distributions Normalized distribution matrices Residual Flows Aggregated Cycles.","code":""},{"path":"/reference/enaCycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full Cycle Analysis of Ecological Networks — enaCycle","text":"","code":"enaCycle(x)"},{"path":"/reference/enaCycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full Cycle Analysis of Ecological Networks — enaCycle","text":"x network object.  includes weighted flows node.","code":""},{"path":"/reference/enaCycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full Cycle Analysis of Ecological Networks — enaCycle","text":"Table.cycle data.frame presents details simple cycles network. contains \"CYCLE\" cycle number, \"NEXUS\" nexus number corresponding cycle, \"NODES\" nodes constituting cycle Table.nexus data.frame presents different nexuses characterized corresponding weak arcs. contains \"NEXUS\" nexus number, \"CYCLES\" number simple cycles present Nexus, \"W.arc.\" starting node corresponding weak arc, \"W.arc.\" ending node corresponding weak arc \"W.arc.Flow\" flow weak arc CycleDist vector Cycle Distribution gives flow cycling loops different sizes NormDist vector Normalized Distribution .e. Cycle Distribution normalized Total System Throughput system ResidualFlows matrix straight-(acyclic) flows network AggregatedCycles matrix Aggregated Biogeochemical Cycles network ns vector full cycle analysis based network statistics. include \"NCYCS\" number simple cycles identified network, \"NNEX\" number disjoint cycles number Nexuses detected network \"CI\" cycling index network.","code":""},{"path":"/reference/enaCycle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Full Cycle Analysis of Ecological Networks — enaCycle","text":"\"NODES\" \"Table.cycle\" arranged weak arc nexus arc first two nodes cycle. function uses backtracking procedure identification simple cycles, cycles cross node except starting node. backtracking process depth-first search algorithm. data.frame \"Table.cycle\", number cycles nexus 50, blank line displayed 50 cycles nexus, followed cycles next nexus. results analysis Feeding Cycles can obtained byproduct enaTroAgg function analyzes trophic dynamics network. every multiple 5000 cycles nexus, program prints indication user know still running.","code":""},{"path":"/reference/enaCycle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Full Cycle Analysis of Ecological Networks — enaCycle","text":"D.B. 1975. Finding elementary circuits directed graph. SIAM J. Comput. 4:77–84 Ulanowicz, R.E. 1983. Identifying structure cycling ecosystems. Methematical Biosciences 65:219–237 Ulanowicz, R.E. Kay, J.J. 1991. package analysis ecosystem flow networks. Environmental Software 6:131 – 142.","code":""},{"path":[]},{"path":"/reference/enaCycle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Full Cycle Analysis of Ecological Networks — enaCycle","text":"Pawandeep Singh","code":""},{"path":"/reference/enaCycle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full Cycle Analysis of Ecological Networks — enaCycle","text":"","code":"data(troModels) cyc6 <- enaCycle(troModels[[6]]) attributes(cyc6) #> $names #> [1] \"Table.cycle\"      \"Table.nexus\"      \"CycleDist\"        \"NormDist\"         #> [5] \"ResidualFlows\"    \"AggregatedCycles\" \"ns\"               #>"},{"path":"/reference/enaEnviron.html","id":null,"dir":"Reference","previous_headings":"","what":"Ecological Network Environs — enaEnviron","title":"Ecological Network Environs — enaEnviron","text":"Calculates environs ecological network.","code":""},{"path":"/reference/enaEnviron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ecological Network Environs — enaEnviron","text":"","code":"enaEnviron(   x,   input = TRUE,   output = TRUE,   type = \"unit\",   err.tol = 1e-10,   balance.override = FALSE )"},{"path":"/reference/enaEnviron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ecological Network Environs — enaEnviron","text":"x network object. input input environ calculated? output output environ calculated? type Specifies type environs (\"unit\" \"realized\") calculated. err.tol Error threshold numerical error fluctuations flows. Values err.tol set zero. balance.override Logical specifying whether (TRUE) (FALSE) model needs balanced prior calculations. TRUE model balanced, environs calculated.","code":""},{"path":"/reference/enaEnviron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ecological Network Environs — enaEnviron","text":"function returns input, output environs depending upon requested.","code":""},{"path":"/reference/enaEnviron.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ecological Network Environs — enaEnviron","text":"Fath, B.D. S.R. Borrett. 2006. MATLAB function network environ analysis. Environmental Modelling & Software 21:375-405.","code":""},{"path":"/reference/enaEnviron.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ecological Network Environs — enaEnviron","text":"Stuart R. Borrett Matthew K. Lau","code":""},{"path":"/reference/enaEnviron.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ecological Network Environs — enaEnviron","text":"","code":"data(troModels) enaEnviron(troModels[[6]]) #> $input #> $input$PLANTS #>                  PLANTS BACTERIA DETRITUS FEEDERS CARNIVORES DETRITUS y #> PLANTS               -1        0                0          0        0 1 #> BACTERIA              0        0                0          0        0 0 #> DETRITUS FEEDERS      0        0                0          0        0 0 #> CARNIVORES            0        0                0          0        0 0 #> DETRITUS              0        0                0          0        0 0 #> z                     1        0                0          0        0 0 #>  #> $input$BACTERIA #>                      PLANTS  BACTERIA DETRITUS FEEDERS  CARNIVORES    DETRITUS #> PLANTS           -0.9332703  0.000000      0.000000000  0.00000000  0.93327028 #> BACTERIA          0.0000000 -1.169351      0.001213296  0.00000000  0.16813787 #> DETRITUS FEEDERS  0.0000000  0.000000     -0.038566625  0.01754939  0.02101723 #> CARNIVORES        0.0000000  0.000000      0.000000000 -0.01754939  0.01754939 #> DETRITUS          0.0000000  1.169351      0.037353329  0.00000000 -1.20670450 #> z                 0.9332703  0.000000      0.000000000  0.00000000  0.06672972 #>                  y #> PLANTS           0 #> BACTERIA         1 #> DETRITUS FEEDERS 0 #> CARNIVORES       0 #> DETRITUS         0 #> z                0 #>  #> $input$`DETRITUS FEEDERS` #>                      PLANTS   BACTERIA DETRITUS FEEDERS  CARNIVORES    DETRITUS #> PLANTS           -0.9332703  0.0000000       0.00000000  0.00000000  0.93327028 #> BACTERIA          0.0000000 -0.2008109       0.03267303  0.00000000  0.16813787 #> DETRITUS FEEDERS  0.0000000  0.0000000      -1.03856662  0.01754939  0.02101723 #> CARNIVORES        0.0000000  0.0000000       0.00000000 -0.01754939  0.01754939 #> DETRITUS          0.0000000  0.2008109       1.00589360  0.00000000 -1.20670450 #> z                 0.9332703  0.0000000       0.00000000  0.00000000  0.06672972 #>                  y #> PLANTS           0 #> BACTERIA         0 #> DETRITUS FEEDERS 1 #> CARNIVORES       0 #> DETRITUS         0 #> z                0 #>  #> $input$CARNIVORES #>                      PLANTS   BACTERIA DETRITUS FEEDERS CARNIVORES    DETRITUS #> PLANTS           -0.9332703  0.0000000       0.00000000   0.000000  0.93327028 #> BACTERIA          0.0000000 -0.2008109       0.03267303   0.000000  0.16813787 #> DETRITUS FEEDERS  0.0000000  0.0000000      -1.03856662   1.017549  0.02101723 #> CARNIVORES        0.0000000  0.0000000       0.00000000  -1.017549  0.01754939 #> DETRITUS          0.0000000  0.2008109       1.00589360   0.000000 -1.20670450 #> z                 0.9332703  0.0000000       0.00000000   0.000000  0.06672972 #>                  y #> PLANTS           0 #> BACTERIA         0 #> DETRITUS FEEDERS 0 #> CARNIVORES       1 #> DETRITUS         0 #> z                0 #>  #> $input$DETRITUS #>                      PLANTS   BACTERIA DETRITUS FEEDERS  CARNIVORES    DETRITUS #> PLANTS           -0.9332703  0.0000000      0.000000000  0.00000000  0.93327028 #> BACTERIA          0.0000000 -0.1693512      0.001213296  0.00000000  0.16813787 #> DETRITUS FEEDERS  0.0000000  0.0000000     -0.038566625  0.01754939  0.02101723 #> CARNIVORES        0.0000000  0.0000000      0.000000000 -0.01754939  0.01754939 #> DETRITUS          0.0000000  0.1693512      0.037353329  0.00000000 -1.20670450 #> z                 0.9332703  0.0000000      0.000000000  0.00000000  0.06672972 #>                  y #> PLANTS           0 #> BACTERIA         0 #> DETRITUS FEEDERS 0 #> CARNIVORES       0 #> DETRITUS         1 #> z                0 #>  #>  #> $output #> $output$PLANTS #>                  PLANTS   BACTERIA DETRITUS FEEDERS  CARNIVORES    DETRITUS #> PLANTS               -1  0.0000000      0.000000000  0.00000000  0.79408083 #> BACTERIA              0 -0.4343412      0.006258519  0.00000000  0.13351506 #> DETRITUS FEEDERS      0  0.0000000     -0.198937442  0.03087536  0.01668938 #> CARNIVORES            0  0.0000000      0.000000000 -0.03087536  0.01393563 #> DETRITUS              0  0.4343412      0.192678923  0.00000000 -0.95822091 #> z                     1  0.0000000      0.000000000  0.00000000  0.00000000 #>                           y #> PLANTS           0.20591917 #> BACTERIA         0.29456761 #> DETRITUS FEEDERS 0.15137270 #> CARNIVORES       0.01693972 #> DETRITUS         0.33120080 #> z                0.00000000 #>  #> $output$BACTERIA #>                  PLANTS   BACTERIA DETRITUS FEEDERS  CARNIVORES     DETRITUS #> PLANTS                0  0.0000000       0.00000000  0.00000000  0.000000000 #> BACTERIA              0 -1.1693512       0.01684944  0.00000000  0.359454730 #> DETRITUS FEEDERS      0  0.0000000      -0.09197564  0.01427474  0.007716077 #> CARNIVORES            0  0.0000000       0.00000000 -0.01427474  0.006442924 #> DETRITUS              0  0.1693512       0.07512620  0.00000000 -0.373613731 #> z                     0  1.0000000       0.00000000  0.00000000  0.000000000 #>                            y #> PLANTS           0.000000000 #> BACTERIA         0.793046998 #> DETRITUS FEEDERS 0.069984817 #> CARNIVORES       0.007831818 #> DETRITUS         0.129136367 #> z                0.000000000 #>  #> $output$`DETRITUS FEEDERS` #>                  PLANTS    BACTERIA DETRITUS FEEDERS CARNIVORES    DETRITUS #> PLANTS                0  0.00000000      0.000000000  0.0000000  0.00000000 #> BACTERIA              0 -0.08420272      0.001213296  0.0000000  0.02588364 #> DETRITUS FEEDERS      0  0.00000000     -1.038566625  0.1611869  0.08712807 #> CARNIVORES            0  0.00000000      0.000000000 -0.1611869  0.07275194 #> DETRITUS              0  0.08420272      0.037353329  0.0000000 -0.18576365 #> z                     0  0.00000000      1.000000000  0.0000000  0.00000000 #>                           y #> PLANTS           0.00000000 #> BACTERIA         0.05710578 #> DETRITUS FEEDERS 0.79025162 #> CARNIVORES       0.08843499 #> DETRITUS         0.06420761 #> z                0.00000000 #>  #> $output$CARNIVORES #>                  PLANTS   BACTERIA DETRITUS FEEDERS  CARNIVORES     DETRITUS #> PLANTS                0  0.0000000      0.000000000  0.00000000  0.000000000 #> BACTERIA              0 -0.2468772      0.003557309  0.00000000  0.075889256 #> DETRITUS FEEDERS      0  0.0000000     -0.113074992  0.01754939  0.009486157 #> CARNIVORES            0  0.0000000      0.000000000 -1.01754939  0.459272292 #> DETRITUS              0  0.2468772      0.109517683  0.00000000 -0.544647706 #> z                     0  0.0000000      0.000000000  1.00000000  0.000000000 #>                           y #> PLANTS           0.00000000 #> BACTERIA         0.16743067 #> DETRITUS FEEDERS 0.08603944 #> CARNIVORES       0.55827710 #> DETRITUS         0.18825279 #> z                0.00000000 #>  #> $output$DETRITUS #>                  PLANTS   BACTERIA DETRITUS FEEDERS  CARNIVORES    DETRITUS #> PLANTS                0  0.0000000      0.000000000  0.00000000  0.00000000 #> BACTERIA              0 -0.5469735      0.007881463  0.00000000  0.16813787 #> DETRITUS FEEDERS      0  0.0000000     -0.250525431  0.03888188  0.02101723 #> CARNIVORES            0  0.0000000      0.000000000 -0.03888188  0.01754939 #> DETRITUS              0  0.5469735      0.242643968  0.00000000 -1.20670450 #> z                     0  0.0000000      0.000000000  0.00000000  1.00000000 #>                           y #> PLANTS           0.00000000 #> BACTERIA         0.37095418 #> DETRITUS FEEDERS 0.19062631 #> CARNIVORES       0.02133249 #> DETRITUS         0.41708701 #> z                0.00000000 #>  #>"},{"path":"/reference/enaFlow.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyses of Ecological Networks — enaFlow","title":"Analyses of Ecological Networks — enaFlow","text":"Performs primary throughflow analysis developed input-output systems.  returns vector throughflows, input output oriented matrices \"direct flow intensities\" \"integral flow intensities\", set flow based network statistics.","code":""},{"path":"/reference/enaFlow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyses of Ecological Networks — enaFlow","text":"","code":"enaFlow(x, zero.na = TRUE, balance.override = FALSE)"},{"path":"/reference/enaFlow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyses of Ecological Networks — enaFlow","text":"x network object.  includes weighted flows node. zero.na LOGICAL: NA values converted zeros. balance.override Flow analysis assumes network model steady-state (inputs = outputs).  Setting balance.override = TRUE allows function run unbalanced models.","code":""},{"path":"/reference/enaFlow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyses of Ecological Networks — enaFlow","text":"T vector node throughflows total amount energy-matter flowing node G matrix output oriented direct flow intensities GP matrix input oriented direct flow intensities N matrix ouput oriented integral (boundary+direct+indirect) flow intensities NP matrix input oriented integral flow intensities TCC matrix total contribution coefficients (Szyrmer & Ulanowicz 1987).  elements TCC indicate fraction total output reaches j TDC matrix total dependency coefficients (Szyrmer & Ulanowicz 1987).  elements TDC indicate fraction j's total consuption passes ns vector flow based network statistics.  include \"Boundary\" total input output system, \"TST\" total system throughflow, \"TSTp\" total system throughPUT,\"APL\" network aggradation TST/Boundary also called average path length, \"FCI\" (Finn Cycling Index) metric amount cycling system, \"BFI\" boundary flow intensity Boundary/TST, \"DFI\" direct flow intensity Direct/TST, \"IFI\" indirect flow intensity Indirect/TST, \"ID.F\" realized indirect direct flow intensity, \"ID.F.\" input idealized indirect flow intensity, \"id.F.O\"output idealized indirect flow intensity, \"HMG.\" input network homogenization, \"HMG.O\" output network homogenization, \"AMP.\" strong measure input network amplifiation, \"AMP.O\" strong measure output network amplification, \"mode0.F\" boundary flow - flow reaches compartment across system boundary, \"mode1.F\" internal first passage flow, \"mode2.F\" cycled flow, \"mode3.F\" dissipative eqivalent mode2, \"mode4.F\" dissipative equivalent ot mode0.","code":""},{"path":"/reference/enaFlow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analyses of Ecological Networks — enaFlow","text":"Borrett, S. R., Freeze, M. ., 2011. Reconnecting environs environment. Ecol. Model. 222, 2393-2403. Fath, B. D., Borrett, S. R. 2006. Matlab function Network Environ Analysis.  Environ. Model. Softw. 21, 375-405. Fath, B. D., Patten, B. C., 1999. Review foundations network environ analysis. Ecosystems 2, 167-179. Finn, J. T., 1976. Measures ecosystem structure function derived analysis flows. J. Theor. Biol. 56, 363-380. Patten, B.C. Higashi, M., Burns, T. P. 1990. Trophic dynamics ecosystem networks: significance cycles storage.  Ecol. Model. 51, 1-28. Schramski, J. R., Kazanci, C., Tollner, E. W., 2011. Network environ theory, simulation EcoNet 2.0. Environ. Model. Softw. 26, 419-428. Szyrmer, J., Ulanowicz, R. E., 1987. \"Total Flows Ecosystems\". Ecol. Mod. 35:123-136. Ulanowicz, R.E., 2004. Quantitative methods ecological network analysis. Comput. Biol. Chem. 28, 321-33 Ulanowicz, R.E., Holt, R.D., Barfield, M., 2014. Limits ecosystem trophic complexity: insights ecological network analysis.  Ecology Letters 17:127-136.","code":""},{"path":[]},{"path":"/reference/enaFlow.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analyses of Ecological Networks — enaFlow","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/enaFlow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyses of Ecological Networks — enaFlow","text":"","code":"data(troModels) F = enaFlow(troModels[[6]])  # completes the full analysis F$ns  # returns just the network statisics #>      Boundary   TST  TSTp      APL        FCI       BFI       DFI       IFI #> [1,]    11819 30626 42445 2.591251 0.09193899 0.3859139 0.3035499 0.3105362 #>          ID.F   ID.F.I    ID.F.O    HMG.I   HMG.O AMP.I AMP.O mode0.F  mode1.F #> [1,] 1.023016 1.414552 0.9126925 2.465946 1.87498     4     0   11819 15991.28 #>       mode2.F  mode3.F mode4.F #> [1,] 2815.723 15991.28   11819"},{"path":"/reference/enaMTI.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixed Trophic Impacts (MTI) Analysis — enaMTI","title":"Mixed Trophic Impacts (MTI) Analysis — enaMTI","text":"Calculates Mixed Trophic Impacts one species another given ecosystem model following algorithm Ulanowicz Puccia (1990). considers direct indirect trophic impacts.","code":""},{"path":"/reference/enaMTI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixed Trophic Impacts (MTI) Analysis — enaMTI","text":"","code":"enaMTI(x, zero.na = TRUE, balance.override = FALSE)"},{"path":"/reference/enaMTI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixed Trophic Impacts (MTI) Analysis — enaMTI","text":"x network object.  includes weighte dflows node.  must also include \"Living\" vector identifies living (TRUE/FALSE) status node. zero.na logical parameter specifies NAs generated analysis reset zero.  default TRUE. balance.override Mixed Trophic Impacts analysis builds flow analysis thus assumes network model steady-state (inputs = outputs).  Setting balance.override = TRUE allows function run unbalanced models, though unadvised.","code":""},{"path":"/reference/enaMTI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mixed Trophic Impacts (MTI) Analysis — enaMTI","text":"G output-oriented direct flow intensity matrix enaFlow, except oriented row column. FP input-oriented direct flow intensity matrix similar enaFlow; however, calculation exclude respiration losses throughflow denominator focus NET production.  Also, receiver compartment living, flux intensity set zero. Q direct net trophic impacts (G-t(FP)). M Total (direct indirect) tropic impacts compartment j. Relations.Table table indicating qualitiative pairwise relationships nodes determined net (direct) mixed (integral) perspectives.","code":""},{"path":"/reference/enaMTI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mixed Trophic Impacts (MTI) Analysis — enaMTI","text":"Ulanowicz school functions require export respiration components output separately quantified. analysis similar concept ENA Utility analysis.","code":""},{"path":"/reference/enaMTI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mixed Trophic Impacts (MTI) Analysis — enaMTI","text":"R.E. C.J. Puccia.  1990. Mixed trophic impacts ecosystems.  Coenoses 5, 7–16.","code":""},{"path":[]},{"path":"/reference/enaMTI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mixed Trophic Impacts (MTI) Analysis — enaMTI","text":"Stuart R. Borrett Matthew K. Lau","code":""},{"path":"/reference/enaMTI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mixed Trophic Impacts (MTI) Analysis — enaMTI","text":"","code":"data(troModels) mti <- enaMTI(troModels[[6]]) attributes(mti) #> $names #> [1] \"G\"               \"FP\"              \"Q\"               \"M\"               #> [5] \"Relations.Table\" #>"},{"path":"/reference/enaModelInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Ecosystem Model Information — enaModelInfo","title":"Ecosystem Model Information — enaModelInfo","text":"Model information set ecosystem models compiled SEE Lab UNCW.","code":""},{"path":"/reference/enaModelInfo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ecosystem Model Information — enaModelInfo","text":"Borrett, S. R., M. K. Lau. Prep. enaR: R package Ecological Network Analysis. Ecological Modeling Software.","code":""},{"path":"/reference/enaModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Ecosystem Models — enaModels","title":"Ecosystem Models — enaModels","text":"set ecosystem models compiled SEE Lab UNCW.","code":""},{"path":"/reference/enaModels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ecosystem Models — enaModels","text":"Borrett, S. R., M. K. Lau. Prep. enaR: R package Ecological Network Analysis. Ecological Modeling Software.","code":""},{"path":"/reference/enaR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools for Ecological Network Analysis (ena) — enaR-package","title":"Tools for Ecological Network Analysis (ena) — enaR-package","text":"package compiles functions analysis ecological networks, building tools previously developed MatLab language (Borrett 2006) multiple additions functionality.","code":""},{"path":[]},{"path":"/reference/enaR-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tools for Ecological Network Analysis (ena) — enaR-package","text":"Borrett SR Lau MK 2014. enaR: r package Ecosystem Network Analysis. Methods Ecology Evolution 5:1206-1213.","code":""},{"path":[]},{"path":"/reference/enaR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tools for Ecological Network Analysis (ena) — enaR-package","text":"Authors: Stuart R. Borrett, Matthew K. Lau, Pawandeep Singh, David E. Hines Maintainer: Matthew K. Lau <enaR.maintainer@gmail.com>","code":""},{"path":"/reference/enaStorage.html","id":null,"dir":"Reference","previous_headings":"","what":"Storage Analyses of Ecological Networks — enaStorage","title":"Storage Analyses of Ecological Networks — enaStorage","text":"Calculates storage-based Ecological Network Analyses.","code":""},{"path":"/reference/enaStorage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Storage Analyses of Ecological Networks — enaStorage","text":"","code":"enaStorage(x, balance.override = FALSE)"},{"path":"/reference/enaStorage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Storage Analyses of Ecological Networks — enaStorage","text":"x network object.  includes weighted flows vertex well amount energy–matter stored vertex. balance.override LOGICAL: imbalanced model analyzed?  FALSE, functions checks make sure network model provided steady-state.  TRUE, function run without ensuring model meets steady-state assumption.","code":""},{"path":"/reference/enaStorage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Storage Analyses of Ecological Networks — enaStorage","text":"X storage values . C output donor-storage normalized output-oriented direct flow intensity matrix (Jacobian community matrix) S dimensionalized integral output community matrix VS variance expected output-oriented residance times (Barber 1979) Q integral output storage matrix - non-dimensional CP input recipient-storage normalized oriented flow intensity matrix (Jacobian community matrix) SP dimensionalized integral input community matrix VSP variance expected input-oriented residance times (Barber 1979) QP integral input storage matrix - non-dimensional dt selected time step create P, PP, Q QP - smallest whole number make diag(C) nonnegative RT node residence time (storage/outputs), units inverse time ns vector storage based whole system network statistics.  statistics include total system storage (TSS), storage cycling index (CIS), Boundary storage intensity (BSI), Direct storage intensity (DSI), Indirect storage intensity (ISI), realized ratio indirect--direct storage (ID.S), unit input-oriented ratio indirect--direct storage intensities (IDS.), unit output ratio indirect--direct storage intensities (IDS.O), input-oriented storage-based network homogenization (HMG.S.), output-oriented storage-based network homogenization (HMG.S.O), input-oriented storage-based network amplification (AMP.S.), output-oriented storage-based network amplification (AMP.S.O), Storage Boundary flow (mode0.S), storage internal first passage flow (mode1.S), storage cycled flow (mode2.S), dissipative equivalent mode1.S (mode3.S), dissipative equivalent mode0.S (mode4.S), Average Residence Time (ART)","code":""},{"path":"/reference/enaStorage.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Storage Analyses of Ecological Networks — enaStorage","text":"Barber, M. C. 1978a. Markovian Model Ecosystem Flow Analysis. Ecol. Model. 5(3):193-206. Barber, M. C. 1978b. Retrospective Markovian Model Ecosystem Resource Flow. Ecol. Model. 5(2): 125-35. Barber, M. C. 1979. Note Concerning Time Parameterization Markovian Models Ecosystem Flow Analysis. Ecol. Model. 6(4): 323-28. Matis, J. H., Patten, B. C. 1981. Environ analysis linear compartmental systems: static, time invariant case.  Bulletin International Statistical Institute, 48: 527-565. Fath, B. D., Patten, B. C. 1999.  Review foundations network enviorn analysis.  Ecosystems 2:167-179. Fath, B. D. Patten, B. C., Choi, J. 2001.  Compementarity ecological goal functions.  Journal Theoretical Biology 208: 493-506. Fath, B. D., Borrett, S. R. 2006. MATLAB function Network Environ Analysis.  Environmental Modelling & Software 21:375-405.","code":""},{"path":[]},{"path":"/reference/enaStorage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Storage Analyses of Ecological Networks — enaStorage","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/enaStorage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Storage Analyses of Ecological Networks — enaStorage","text":"","code":"data(oyster) S <- enaStorage(oyster) attributes(S) #> $names #>  [1] \"X\"   \"C\"   \"P\"   \"S\"   \"VS\"  \"Q\"   \"CP\"  \"PP\"  \"SP\"  \"VSP\" \"QP\"  \"dt\"  #> [13] \"RT\"  \"ns\"  #>"},{"path":"/reference/enaStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Structure Analyses of Ecological Network — enaStructure","title":"Structure Analyses of Ecological Network — enaStructure","text":"Analysis structure ecological flow network.","code":""},{"path":"/reference/enaStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Structure Analyses of Ecological Network — enaStructure","text":"","code":"enaStructure(x = \"network object\")"},{"path":"/reference/enaStructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Structure Analyses of Ecological Network — enaStructure","text":"x network object.","code":""},{"path":"/reference/enaStructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Structure Analyses of Ecological Network — enaStructure","text":" ns vector structure based network statistics. include n = number nodes, L = number edges, C = connectivity, LD = link density, ppr = pathway proliferation rate, lam1A = dominant eigenvalue, mlam1A = multiplicity dominant eigenvalue, rho = damping ratio, R = distance dominant eigen value eigen spectra, d = difference dominant eigen value link density, .scc = number strongly connected components, .scc.big = number strongly connected components one node, pscc = percent nodes strongly connected components.","code":""},{"path":"/reference/enaStructure.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Structure Analyses of Ecological Network — enaStructure","text":"Fath, B. D., Borrett, S. R. 2006. Matlab function Network Environ Analysis.  Environ. Model. Softw. 21, 375-405.","code":""},{"path":[]},{"path":"/reference/enaStructure.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Structure Analyses of Ecological Network — enaStructure","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/enaStructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Structure Analyses of Ecological Network — enaStructure","text":"","code":"data(troModels) enaStructure(troModels[[6]]) #> $A #>                  PLANTS BACTERIA DETRITUS FEEDERS CARNIVORES DETRITUS #> PLANTS                0        0                0          0        1 #> BACTERIA              0        0                1          0        1 #> DETRITUS FEEDERS      0        0                0          1        1 #> CARNIVORES            0        0                0          0        1 #> DETRITUS              0        1                1          0        0 #>  #> $ns #>      n L    C  LD      ppr    lam1A mlam1A      rho         R         d no.scc #> [1,] 5 8 0.32 1.6 1.839287 1.839287      1 1.839287 0.6691441 0.2392868      2 #>      no.scc.big pscc #> [1,]          1  0.8 #>"},{"path":"/reference/enaTroAgg.html","id":null,"dir":"Reference","previous_headings":"","what":"Trophic Aggregations (TroAgg) Analysis — enaTroAgg","title":"Trophic Aggregations (TroAgg) Analysis — enaTroAgg","text":"returns data quantifying underlying trophic structure given model based interaction living non-living nodes. based Trophic Aggregations suggested Lindeman (1942) follows algorithm Ulanowicz Kemp (1979) implemented NETWRK 4.2b. removes Feeding cycles network beforehand provide accurate results.","code":""},{"path":"/reference/enaTroAgg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trophic Aggregations (TroAgg) Analysis — enaTroAgg","text":"","code":"enaTroAgg(x, balance.override = FALSE)"},{"path":"/reference/enaTroAgg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trophic Aggregations (TroAgg) Analysis — enaTroAgg","text":"x network object.  includes weighted flows node. include separate respiration export values Canonical Exports Canonical Respirations results respectively. must also include \"Living\" vector identifies living (TRUE/FALSE) status node. must contain non-living nodes end node vector, function netOrder can used . balance.override Flow analysis assumes network model steady-state (inputs = outputs).  Setting balance.override = TRUE allows function run unbalanced models.","code":""},{"path":"/reference/enaTroAgg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trophic Aggregations (TroAgg) Analysis — enaTroAgg","text":"Feeding_Cycles List gives details Feeding Cycles network. output according enaCycle function applied Living components network matrix distributes species integer Trophic Levels (Lindeman Transformation Matrix). dimension (NL X NL) NL number Living nodes. ETL vector Effective Trophic Level species. M.flow vector Migratory flows, present, network. CI vector Canonical Inputs integer trophic levels. Displayed Migratory flows present. CE vector Canonical exports exports integer trophic levels CR vector Canonical Respirations respiration values integer trophic levels. GC vector input flow trophic level preceeding trophic level. represents Grazing Chain network. RDP vector Returns Detrital Pool trophic level. LS vector Lindeman trophic spine. combines Detrital pool autotrophs forms monotonically decreasing sequence flows one trophic level next, starting said combination. TE vector trophic efficiencies .e. ratio input trophic level amount flow passed next level . ns vector trophic aggregations based network statistics. include average Trohic Level (\"ATL\"), \"Detritivory\" flow detrital pool second trophic level, \"DetritalInput\" exogenous inputs detrital pool, \"DetritalCirc\" circulation within detrital pool, \"NCYCS\" number feeding cycles removed, \"NNEX\" number feeding cycle Nexuses removed \"CI\" Cycling Index Feeding Cycles, \"Herbivory\", \"Detritivory/Herbivory\"","code":""},{"path":"/reference/enaTroAgg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trophic Aggregations (TroAgg) Analysis — enaTroAgg","text":"Ulanowicz school functions require export respiration components output separately quantified. analysis involves ENA Cycle analysis removal Feeding Cycles network. cycles amongst living nodes cause error trophic aggregations. analysis requires non-living nodes placed end network object.","code":""},{"path":"/reference/enaTroAgg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trophic Aggregations (TroAgg) Analysis — enaTroAgg","text":"R.L. 1942. trophic-dynamic aspect ecology. Ecology 23:399–418. Ulanowicz, R.E. Kemp, W.M.  1979. Towards canonical trophic aggregations. American Naturalist. 114:871–883. Ulanowicz, R.E. 1995. Ecosystem trophic foundations: Lindeman exonerata. pp. 549–560. B.C. Patten S.E. Jorgensen (eds.) Complex Ecology: part-whole relation ecosystems. Prentice Hall, New Jersey. Ulanowicz, R.E. Kay, J.J. 1991. package analysis ecosystem flow networks. Environmental Software 6:131 – 142.","code":""},{"path":[]},{"path":"/reference/enaTroAgg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trophic Aggregations (TroAgg) Analysis — enaTroAgg","text":"Pawandeep Singh","code":""},{"path":"/reference/enaTroAgg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trophic Aggregations (TroAgg) Analysis — enaTroAgg","text":"","code":"data(troModels) tro6 <- enaTroAgg(troModels[[6]]) attributes(tro6) #> $names #>  [1] \"Feeding_Cycles\" \"A\"              \"ETL\"            \"CE\"             #>  [5] \"CR\"             \"GC\"             \"RDP\"            \"LS\"             #>  [9] \"TE\"             \"ns\"             #>"},{"path":"/reference/enaUncertainty.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a set of plausible network models — enaUncertainty","title":"Produce a set of plausible network models — enaUncertainty","text":"Connects enaR limSolve apply Linear Inverse Modelling conduct uncertainty analysis Ecological Network Analysis. Users supply initial ecosystem model (enaR format) uncertainty informaiton (several ways specifying), function returns list (length = \"iter\") balanced plausible instantiations model.  used determine 95 determine statistical significance selected comaprisons (Hines et al. 2015, 2016).","code":""},{"path":"/reference/enaUncertainty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a set of plausible network models — enaUncertainty","text":"","code":"enaUncertainty(   x = \"network object\",   type = \"percent\",   iter = 10000,   p.err = NA,   F.sym = NA,   z.sym = NA,   y.sym = NA,   e.sym = NA,   r.sym = NA,   F.bot = NA,   z.bot = NA,   y.bot = NA,   e.bot = NA,   r.bot = NA,   F.top = NA,   z.top = NA,   y.top = NA,   e.top = NA,   r.top = NA )"},{"path":"/reference/enaUncertainty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a set of plausible network models — enaUncertainty","text":"x network object.  includes weighted flows node. type paramter switch kind uncertainty analysis complete: \"percent\", \"sym\", \"asym\".  \"percent\" options explores parameter space parameters fixed percentage.  \"sym\" options let user specify amount explore around flow estimate (internal flows (F) boundary flows (inputs, exports, respirations).  option assuems possible deviation symmetric around original values.  \"asym\" lets user specify upper lower limits flow value. iter number plausible models sample (number iterations sampling algorithm).  default 10000, often sufficient sample size Monte Carlo sampling. p.err user selects \"percent\" type, must also specify percent change parameter. F.sym user selects \"sym\" type, parameter specifies 1/2 symmetric parameter range internal flow.  specified data frame sparse matrix format columns identifying starting node, target node, change value (units flows). z.sym user selects \"sym\" type, parameter specifies 1/2 symmetric parameter range input flow. specified data frame sparse matrix format columns identifying node number change value (units flows). y.sym user selects \"sym\" type, parameter specifies 1/2 symmetric parameter range output flows.  specified data frame sparse matrix format columns identifying node number change value (units flows). e.sym user selects \"sym\" type, parameter specifies 1/2 symmetric parameter range export flows.  specified data frame sparse matrix format columns identifying node number change value (units flows). r.sym user selects \"sym\" type, parameter specifies 1/2 symmetric parameter range respiration flows.  specified data frame sparse matrix format columns identifying node number change value (units flows). F.bot user selects \"asym\" type, data.frame specifies minimum possible value internal flows.  specified data frame sparse matrix format columns identifying starting node, target node, change value (units flows). z.bot user selects \"asym\" type, data.frame specifies minimum value non-zero model input.  specified data frame sparse matrix format columns identifying node number minimum value (units flows). y.bot user selects \"asym\" type, data.frame specifies minimum value non-zero model output.  specified data frame sparse matrix format columns identifying node number minimum value (units flows). e.bot user selects \"asym\" type, data.frame specifies minimum value non-zero model export.  specified data frame sparse matrix format columns identifying node number minimum value (units flows). r.bot user selects \"asym\" type, data.frame specifies minimum value non-zero model respiration.  specified data frame sparse matrix format columns identifying node number minimum value (units flows). F.top user selects \"asym\" type, data.frame specifies maximum possible value internal flows.  specified data frame sparse matrix format columns identifying starting node, target node, change value (units flows). z.top user selects \"asym\" type, data.frame specifies maximum value non-zero model input.  specified data frame sparse matrix format columns identifying node number maximum value (units flows). y.top user selects \"asym\" type, data.frame specifies maximum value non-zero model output.  specified data frame sparse matrix format columns identifying node number maximum value (units flows). e.top user selects \"asym\" type, data.frame specifies maximum value non-zero model export.  specified data frame sparse matrix format columns identifying node number maximum value (units flows). r.top user selects \"asym\" type, data.frame specifies maximum value non-zero model respiration.  specified data frame sparse matrix format columns identifying node number maximum value (units flows).","code":""},{"path":"/reference/enaUncertainty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a set of plausible network models — enaUncertainty","text":"plausible.models length=iter list plausible models network data object format spcified enaR","code":""},{"path":"/reference/enaUncertainty.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Produce a set of plausible network models — enaUncertainty","text":"Hines, D.E., J.. Lisa, B. Song, C.R. Tobias, S.R. Borrett. 2015. Estimating impacts sea level rise coupling estuarine nitrogen cycling processes comparative network analysis. Marine Ecology Progress Series 524: 137-154. Hines, D.E, Singh, P., Borrett, S.R. 2016. Evaluating control nutrient flow estuarine nitrogen cycle comparative network analysis. Ecological Engineering 89:70-79. doi:10.1016/j.ecoleng.2016.01.009","code":""},{"path":"/reference/enaUncertainty.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a set of plausible network models — enaUncertainty","text":"David E. Hines","code":""},{"path":"/reference/enaUncertainty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a set of plausible network models — enaUncertainty","text":"","code":"rm(list = ls()) library(enaR)  # === INPUT ===  # load model for analysis data(troModels) m <- troModels[[6]] # cone sping model (Kay et al. 1989; from Tilly)  # Set Uncertainty Analysis parameters no.samples = 150 # the number of plausible models to return (number of samples);                   # 10,000 would be better. f.error = 25   # flow parameters percent error to investigate  # === ACTION ===  # peform uncertainty analysis m.uncertainty.list <- enaUncertainty(m,                     # original model                                      type = \"percent\",      # type of uncertainty to use                                     p.err = f.error,       # define percent error                                      iter = no.samples )    # specify the number of samples #> Warning: No equalities - setting type = 2  # apply selected ENA ns <- lapply(m.uncertainty.list, get.ns) # get ENA whole network statstics (metrics, indicators) ns <- as.data.frame(do.call(rbind, ns))  ns.original <- as.data.frame(get.ns(m))  # === OUTPUT ===  # lets see how the uncertainty in model flows changed the model inputs and total system throughflow. opar <- par(las = 1, mfcol = c(2,1)) hist(ns$Boundary, col = \"steelblue\", border = \"white\", main = \"Total Boundary Input\") abline(v = ns.original$Boundary, col = \"orange\", lwd = 2) hist(ns$TST, col = \"blue2\", border = \"white\", main = \"Total System ThroughFLOW\") abline(v = ns.original$TST, col = \"orange\", lwd = 2)  rm(opar)  # Lets use the 95% CI to make statisitcal inferences about the # hypothesized \"dominance of indirect effects\" (Higashi and Patten # 1991, Salas and Borrett 2010, Borrett et al. 2016), and \"network # homogenization\" (Fath and Patten 1999, Borrett and Salas 2010, # Borrett et al. 2016)  # find 95% confidence intervals id.95ci <- quantile(ns$ID.F, probs = c(0.025, 0.975)) hmg.95ci <- quantile(ns$HMG.O, probs = c(0.025, 0.975))  # barplot of the calculated values for the original model opar <- par(las = 1) bp <- barplot(c(ns.original$ID.F, ns.original$HMG.O),           ylim = c(0,3),           col = \"grey\",               border = NA,               names.arg = c(\"Indirect/Direct\", \"Homogenization\")) abline(h = 1, col = \"orange\", lwd = 1.5) # threshold value  # add 95CI error bars from Uncertainty Analysis arrows(bp, c(id.95ci[1], hmg.95ci[1]),       bp, c(id.95ci[2], hmg.95ci[2]),       code = 3, lwd = 1.5, angle = 90, length = 0.2, col = \"black\")  # === OUTPUT ===  # lets see how the uncertainty in model flows changed the model inputs and total system throughflow. opar <- par(las = 1, mfcol = c(2,1))  hist(ns$Boundary, col = \"steelblue\", border = \"white\", main = \"Total Boundary Input\") abline(v = ns.original$Boundary, col = \"orange\", lwd = 2) hist(ns$TST, col = \"blue2\", border = \"white\", main = \"Total System ThroughFLOW\") abline(v = ns.original$TST, col = \"orange\", lwd = 2)  rm(opar)  # Lets use the 95% CI to make statisitcal inferences about the # hypothesized \"dominance of indirect effects\" (Higashi and Patten # 1991, Salas and Borrett 2010, Borrett et al. 2016), and \"network # homogenization\" (Fath and Patten 1999, Borrett and Salas 2010, # Borrett et al. 2016)  # find 95% confidence intervals id.95ci <- quantile(ns$ID.F, probs = c(0.025, 0.975)) hmg.95ci <- quantile(ns$HMG.O, probs = c(0.025, 0.975))  opar <- par(las = 1) bp <- barplot(c(ns.original$ID.F, ns.original$HMG.O),          ylim = c(0,3),          col = \"grey\",              border = NA,              names.arg = c(\"Indirect/Direct\", \"Homogenization\")) abline(h = 1, col = \"orange\", lwd = 1.5) # threshold value  # add 95CI error bars from Uncertainty Analysis arrows(bp, c(id.95ci[1], hmg.95ci[1]),        bp, c(id.95ci[2], hmg.95ci[2]),        code = 3, lwd = 1.5, angle = 90, length = 0.2, col = \"black\")  # The results show that the orignial value of the Indirect-to-Direct # flows ratio is larger than one, indicating the \"dominance of # indirect effects\"; however, the 95% confidence interval for this # indicator with a 25% uniform uncertainty spans the threshold value # of 1 (ranging from 0.9 to 1.16).  Thus, we are not confident that # this parameter exceeds the interpretation threshold given this # level of uncertainty.  In contast, the network homogenizaiton # pameter exceeds the interpretation threshold of 1.0, and the 95% CI # for our level of uncertainty suggests that we are confident that # this interpretation is correct.  hist(ns$TST, col = \"blue\")"},{"path":"/reference/enaUtility.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Analysis of Ecological Networks — enaUtility","title":"Utility Analysis of Ecological Networks — enaUtility","text":"Performs flow storage based utility analysis developed input-output network models ecosystems.  returns set matrices direct integral utilities well set utility based network statistics.","code":""},{"path":"/reference/enaUtility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility Analysis of Ecological Networks — enaUtility","text":"","code":"enaUtility(x, type = c(\"flow\", \"storage\"), balance.override = FALSE, tol = 10)"},{"path":"/reference/enaUtility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility Analysis of Ecological Networks — enaUtility","text":"x network object.  includes weighted flows node.  storage utility analysis must also include amount energy–matter stored node (biomass). type Determines whether flow storage utility analysis returned. balance.override LOGICAL: model balancing ignored. enaUtility assumes network model steady-state.  default setting allow function applied models steady-state.  However, balance.override set TRUE, function work regardless. tol integral utility matrix rounded number digits specified tol.  approximation eleminates small numbers introduced due numerical error ginv function.  eliminate small numerical error introduced larger values, truncate numbers.","code":""},{"path":"/reference/enaUtility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility Analysis of Ecological Networks — enaUtility","text":"D Direct flow utility intensity matrix.  (fij-fji)/Ti ,j=1:n U Nondimensional integral flow utility Y Dimensional integral flow utility ns type set 'flow', list flow utility network statistics including: dominant eigenvalue D (lambda\\_1D), flow based network synergism (synergism.F), flow based network mutualism (mutualism.F). DS Direct storage utility intensity matrix.  (fij-fji)/xi ,j=1:n US Nondimensional integral storage utility YS Dimensional integral storage utility ns type set 'storage', list storage utility network statistics including: dominant eigenvalue DS (lambda_1DS), storage based network synergism (synergism.S), storage based network mutualism (mutualism.S).","code":""},{"path":"/reference/enaUtility.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Utility Analysis of Ecological Networks — enaUtility","text":"Fath, B.D. Patten, B.C. 1998. Network synergism: emergence positive relations ecological systems.  Ecol. Model. 107:127–143. Fath, B.D. Borrett, S.R. 2006. Matlab function Network Environ Analysis. Environ. Model. Soft. 21: 375–405. Patten, B.C. 1991.  Network ecology: Indirect determination life-environment relationship ecosystems.  : Higashi, M. Burns, T.  (eds). Theoretical Studies Ecosystems: Network Perspective. Cambridge University Press.  New York.","code":""},{"path":[]},{"path":"/reference/enaUtility.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility Analysis of Ecological Networks — enaUtility","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/environCentrality.html","id":null,"dir":"Reference","previous_headings":"","what":"Environ Centrality an Ecological Network — environCentrality","title":"Environ Centrality an Ecological Network — environCentrality","text":"function calculates input, output, average environ centrality nodes network (Fath Borret, 2012).  type weighted degree centrality indicates relative importance nodes flow activity network.","code":""},{"path":"/reference/environCentrality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environ Centrality an Ecological Network — environCentrality","text":"","code":"environCentrality(x = \"matrix\")"},{"path":"/reference/environCentrality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environ Centrality an Ecological Network — environCentrality","text":"x square matrix.  Usually integral flow marix enaFlow. assumption flows oriented column row.","code":""},{"path":"/reference/environCentrality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environ Centrality an Ecological Network — environCentrality","text":"ECin input oriented environ centrality ECout output oriented environ centraility AEC average environ centrality (average input output)","code":""},{"path":"/reference/environCentrality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Environ Centrality an Ecological Network — environCentrality","text":"Fann, S.L. Borrett, S.R. 2012. Environ centrality reveals tendency indirect effects homogenize functional importance species ecosystems.  Journal Theoretical Biology 294: 74-86.","code":""},{"path":[]},{"path":"/reference/environCentrality.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Environ Centrality an Ecological Network — environCentrality","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/environCentrality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environ Centrality an Ecological Network — environCentrality","text":"","code":"data(troModels) F <- enaFlow(troModels[[6]]) ec <- environCentrality(F$N) attributes(ec) #> $names #> [1] \"ECin\"  \"ECout\" \"AEC\"   #>  barplot(sort(ec$AEC, decreasing = TRUE), col = 4, ylab = \"Average Environ Centrality\",      ylim = c(0, 0.4))"},{"path":"/reference/findPathLength.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Flow over a Range of Path Lengths — findPathLength","title":"Cumulative Flow over a Range of Path Lengths — findPathLength","text":"Calculates flow throughout entire network given path length.","code":""},{"path":"/reference/findPathLength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Flow over a Range of Path Lengths — findPathLength","text":"","code":"findPathLength(x, maxPath = 100, plot.sw = FALSE)"},{"path":"/reference/findPathLength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Flow over a Range of Path Lengths — findPathLength","text":"x Network model object. maxPath maximum path length calculate total flow. plot.sw LOGICAL: plot generated showing flow accumulation?","code":""},{"path":"/reference/findPathLength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Flow over a Range of Path Lengths — findPathLength","text":"thresholds thresholds indicating development throughflow path length increases: path length indirect flow exceeds direct flow (mID), path length 50%, 90%, 95% total system throughflow achieved (m50, m90, m95, respectively) tf total flow across paths length 0 (Boundary inputs) maxPath ctf cumulative total flow path length 0 maxPath","code":""},{"path":"/reference/findPathLength.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cumulative Flow over a Range of Path Lengths — findPathLength","text":"Borrett, S.R, Patten, B.C., Whipple, S.J. 2010.  Rapid development indirect effects ecological networks.  Oikos 119:1136–1148.","code":""},{"path":[]},{"path":"/reference/findPathLength.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cumulative Flow over a Range of Path Lengths — findPathLength","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/findPathLength.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Flow over a Range of Path Lengths — findPathLength","text":"","code":"data(troModels) pl10 <- findPathLength(troModels[[6]], plot.sw = TRUE, maxPath = 10)  names(pl10) #> [1] \"thresholds\" \"tf\"         \"ctf\"        pl10$thresholds #> mID m50 m80 m95  #>   6   1   2   4"},{"path":"/reference/force.balance.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeated Application the Balance Function — force.balance","title":"Repeated Application the Balance Function — force.balance","text":"function repeatedly balances model, sequentially output passed back balance function, within tolerance maximum number iterations reached.","code":""},{"path":"/reference/force.balance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeated Application the Balance Function — force.balance","text":"","code":"force.balance(x, tol = 5, max.itr = 10, method = \"AVG2\")"},{"path":"/reference/force.balance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeated Application the Balance Function — force.balance","text":"x network object. tol Percent error tolerance difference inputs outputs. max.itr Maximum number iterations. method balancing method use, see balance. DEFAULT = AVG2.","code":""},{"path":"/reference/force.balance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeated Application the Balance Function — force.balance","text":"Returns balanced network model.","code":""},{"path":"/reference/force.balance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Repeated Application the Balance Function — force.balance","text":"Allesina, S., Bondavalli, C., 2003.Steady state ecosystem flow networks: comparison balancing procedures.Ecological Modelling 165(2-3):231-239.","code":""},{"path":[]},{"path":"/reference/force.balance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Repeated Application the Balance Function — force.balance","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/force.balance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeated Application the Balance Function — force.balance","text":"","code":"data(troModels) ssCheck(troModels[[1]]) #> [1] TRUE fb.model = force.balance(troModels[[2]])  #produces a balanced model"},{"path":"/reference/get.ns.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick Calculation of a Range of Network Statistics. — get.ns","title":"Quick Calculation of a Range of Network Statistics. — get.ns","text":"high level function calculated main network analyses (Ascendancy, Flow, Structure, Storage Utility) ecological network.","code":""},{"path":"/reference/get.ns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick Calculation of a Range of Network Statistics. — get.ns","text":"","code":"get.ns(x, balance.override = FALSE)"},{"path":"/reference/get.ns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick Calculation of a Range of Network Statistics. — get.ns","text":"x network object. balance.override Turns balancing balance checking.","code":""},{"path":"/reference/get.ns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick Calculation of a Range of Network Statistics. — get.ns","text":"Returns network statistics (ns) major ENA functions: enaStructure, enaFlow, enaAscendency, enaStorage enaUtility (flow storage).","code":""},{"path":"/reference/get.ns.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quick Calculation of a Range of Network Statistics. — get.ns","text":"Fath, B. D., Borrett, S. R. 2006. Matlab function Network Environ Analysis.  Environ. Model. Softw. 21, 375-405.","code":""},{"path":[]},{"path":"/reference/get.ns.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quick Calculation of a Range of Network Statistics. — get.ns","text":"Matthew K. Lau Stuart R. Borrett David E. Hines","code":""},{"path":"/reference/get.ns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick Calculation of a Range of Network Statistics. — get.ns","text":"","code":"data(troModels) get.ns(troModels[[6]]) #>  n L    C  LD      ppr    lam1A mlam1A      rho         R         d no.scc #>  5 8 0.32 1.6 1.839287 1.839287      1 1.839287 0.6691441 0.2392868      2 #>  no.scc.big pscc Boundary   TST  TSTp      APL        FCI       BFI       DFI #>           1  0.8    11819 30626 42445 2.591251 0.09193899 0.3859139 0.3035499 #>        IFI     ID.F   ID.F.I    ID.F.O    HMG.I   HMG.O AMP.I AMP.O mode0.F #>  0.3105362 1.023016 1.414552 0.9126925 2.465946 1.87498     4     0   11819 #>   mode1.F  mode2.F  mode3.F mode4.F       H      AMI       Hr      CAP      ASC #>  15991.28 2815.723 15991.28   11819 3.20096 1.336447 1.864513 135864.7 56725.49 #>        OH   ASC.CAP    OH.CAP robustness      ELD       TD  A.input A.internal #>  79139.25 0.4175144 0.5824856  0.3646722 1.908258 2.525286 19147.85   29331.98 #>  A.export A.respiration OH.input OH.internal OH.export OH.respiration CAP.input #>  1051.765      7193.894 6221.751    29832.46  7810.812       35274.22   25369.6 #>  CAP.internal CAP.export CAP.respiration    TSS       CIS        BSI        DSI #>      59164.44   8862.578        42468.11 4058.4 0.8477217 0.06471625 0.05363378 #>      ISI     ID.S   ID.S.I   ID.S.O   HMG.S.O   HMG.S.I NAS NASP  mode0.S #>  0.88165 16.43833 17.07625 14.38192 0.9422994 0.9971809   4    8 262.6444 #>   mode1.S  mode2.S  mode3.S  mode4.S       ART    lam1D relation.change.F #>  355.3617 3440.394 355.3617 262.6444 0.2351111 1.015627             73.33 #>  synergism.F mutualism.F   lam1DS relation.change.S synergism.S mutualism.S #>     3.979433       2.125 13.66567             73.33    4.641385    3.166667"},{"path":"/reference/get.orient.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the global orientation — get.orient","title":"Returns the global orientation — get.orient","text":"Returns current setting expected orientation matrices, either 'rc' (DEFAULT) 'school' (output orientation expected school analysis given function). function intended provide increase flexibility users Patten Ulanowicz schools ENA.","code":""},{"path":"/reference/get.orient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the global orientation — get.orient","text":"","code":"get.orient()"},{"path":"/reference/get.orient.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns the global orientation — get.orient","text":"M.K. Lau S.R. Borrett","code":""},{"path":"/reference/m.list.html","id":null,"dir":"Reference","previous_headings":"","what":"Sub-set of the Larger Ecosystem Models — m.list","title":"Sub-set of the Larger Ecosystem Models — m.list","text":"set ecosystem models compiled SEE Lab UNCW.","code":""},{"path":"/reference/m.list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sub-set of the Larger Ecosystem Models — m.list","text":"Borrett, S. R., M. K. Lau. Prep. enaR: R package Ecological Network Analysis. Ecological Modeling Software.","code":""},{"path":"/reference/mExp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the exponent of a given matrix — mExp","title":"Calculate the exponent of a given matrix — mExp","text":"Function calculating pathway proliferation flows network model matrix exponentiation.","code":""},{"path":"/reference/mExp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the exponent of a given matrix — mExp","text":"","code":"mExp(x = \"matrix\", n = 2)"},{"path":"/reference/mExp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the exponent of a given matrix — mExp","text":"x matrix. n Desired exponent (.e. path length).","code":""},{"path":"/reference/mExp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the exponent of a given matrix — mExp","text":"Returns exponentiated flow matrix.","code":""},{"path":"/reference/mExp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the exponent of a given matrix — mExp","text":"function originally designed Alberto Monteiro following R help thread: https://stat.ethz.ch/pipermail/r-help/2007-May/131330.html.","code":""},{"path":[]},{"path":"/reference/mExp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the exponent of a given matrix — mExp","text":"Alberto Monteiro (https://stat.ethz.ch/pipermail/r-help/2007-May/131330.html) Matthew K. Lau","code":""},{"path":"/reference/meanTrophicLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"meanTrophicLevel INPUT = network data object, min trophic level choice OUTPUT = mean trophic level — meanTrophicLevel","title":"meanTrophicLevel INPUT = network data object, min trophic level choice OUTPUT = mean trophic level — meanTrophicLevel","text":"==============================","code":""},{"path":"/reference/meanTrophicLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"meanTrophicLevel INPUT = network data object, min trophic level choice OUTPUT = mean trophic level — meanTrophicLevel","text":"","code":"meanTrophicLevel(x = \"model\", minTL = 2)"},{"path":"/reference/meanTrophicLevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"meanTrophicLevel INPUT = network data object, min trophic level choice OUTPUT = mean trophic level — meanTrophicLevel","text":"x network object.  includes weighted flows node.  model needs steady-state minTL minimum trophic level included calculation fo mean trophic level.   default 2, users often use 3.25 4.","code":""},{"path":"/reference/meanTrophicLevel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"meanTrophicLevel INPUT = network data object, min trophic level choice OUTPUT = mean trophic level — meanTrophicLevel","text":"Stuart R. Borrett","code":""},{"path":"/reference/meanTrophicLevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"meanTrophicLevel INPUT = network data object, min trophic level choice OUTPUT = mean trophic level — meanTrophicLevel","text":"","code":"data(enaModels) meanTrophicLevel(enaModels[[12]], minTL = 3.25) #> Warning: Model is not balanced #> [1] 3.586327"},{"path":"/reference/netOrder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder Nodes in a Network in enaR — netOrder","title":"Reorder Nodes in a Network in enaR — netOrder","text":"Reorders nodes network either user defined node order vector default places non-living nodes end node vector, minimizing order change nodes.","code":""},{"path":"/reference/netOrder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder Nodes in a Network in enaR — netOrder","text":"","code":"netOrder(x = \"network object\", order = 0)"},{"path":"/reference/netOrder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder Nodes in a Network in enaR — netOrder","text":"x network object. includes weighted flows node. order integer vector length N, N number nodes x, specifying new order nodes (default order = 0, indicates moving non-living nodes end)","code":""},{"path":"/reference/netOrder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder Nodes in a Network in enaR — netOrder","text":"Returns network object nodes ordered per node order vector without node order vector, default moves non-living nodes end node vector, minimizing order change nodes.","code":""},{"path":"/reference/netOrder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorder Nodes in a Network in enaR — netOrder","text":"node order vector \"order\" must length equal number nodes x (.e. N) must contain integers 1 N. function can used default conditions (.e. without \"order\" vector) reorder nodes network non-living nodes placed end Trophic Aggregations analysis (enaTroAgg) can run reordered model.","code":""},{"path":[]},{"path":"/reference/netOrder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reorder Nodes in a Network in enaR — netOrder","text":"Pawandeep Singh","code":""},{"path":"/reference/netOrder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder Nodes in a Network in enaR — netOrder","text":"","code":"data(troModels) new.network <- netOrder(troModels[[6]], c(1, 3, 2, 5, 4)) # new.network is the required rearranged network with nodes in the desired order."},{"path":"/reference/oyster.html","id":null,"dir":"Reference","previous_headings":"","what":"Intertidal Oyster Reef Ecosystem Model — oyster","title":"Intertidal Oyster Reef Ecosystem Model — oyster","text":"Intertidal oyster reef ecosystem model created Dame Patten (1981). Data taken Patten (1985).  Model flows kcal m^-2 day^-1; storage data kcal m^-2.","code":""},{"path":"/reference/oyster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Intertidal Oyster Reef Ecosystem Model — oyster","text":"Dame, R. F., B. C. Patten. 1981. Analysis energy flows intertidal oyster reef. Marine Ecology Progress Series 5:115-124. Patten, B. C. 1985. Energy cycling, length food chains, direct versus indirect effects ecosystems. Can. Bull. Fish. Aqu. Sci. 213:119-138.","code":""},{"path":"/reference/pack.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile Network Information into a Network Class — pack","title":"Compile Network Information into a Network Class — pack","text":"function provides flexible framework importing flow network information network class object analyses.","code":""},{"path":"/reference/pack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile Network Information into a Network Class — pack","text":"","code":"pack(   flow,   input = NA,   respiration = NA,   export = NA,   output = NA,   storage = NA,   living = NA )"},{"path":"/reference/pack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile Network Information into a Network Class — pack","text":"flow flow matrix. input inputs system. respiration quantities respired system. export exports system. output output (.e. exports + respiration) system. storage quantities stored compartments within system. living logical vector indicating whether node either 'living' (= TRUE) 'dead' (=FALSE).","code":""},{"path":"/reference/pack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile Network Information into a Network Class — pack","text":"Returns network object supplied model.","code":""},{"path":[]},{"path":"/reference/pack.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compile Network Information into a Network Class — pack","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/plot.lindeman.html","id":null,"dir":"Reference","previous_headings":"","what":"plot.lindeman INPUT = network object OUTPUT = plot of the lindeman spine — plot.lindeman","title":"plot.lindeman INPUT = network object OUTPUT = plot of the lindeman spine — plot.lindeman","text":"Dr. Ulrike Schückel, Landesbetrieb für Küstenschutz, Nationalpark und Meeresschutz Schleswig-Holstein, Nationalparkverwaltung, Schlossgarten 1, 25832 Tönning","code":""},{"path":"/reference/plot.lindeman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot.lindeman INPUT = network object OUTPUT = plot of the lindeman spine — plot.lindeman","text":"","code":"# S3 method for class 'lindeman' plot(x = \"model\", enatroagg = \"troagg\", primprod, type = 1)"},{"path":"/reference/plot.lindeman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot.lindeman INPUT = network object OUTPUT = plot of the lindeman spine — plot.lindeman","text":"x ENA network object. enatroagg resutls enaTroAgg function applied model primprod vector nodes primary producers type switches beteween two types plots: 1 = D separate, 2 = D combined","code":""},{"path":"/reference/plot.lindeman.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot.lindeman INPUT = network object OUTPUT = plot of the lindeman spine — plot.lindeman","text":"Applies enaTroAgg function creates plot Lindeman Spine","code":""},{"path":"/reference/plot.lindeman.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"plot.lindeman INPUT = network object OUTPUT = plot of the lindeman spine — plot.lindeman","text":"Style plot according Baird et al., 2004, 2007","code":""},{"path":[]},{"path":"/reference/plot.lindeman.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plot.lindeman INPUT = network object OUTPUT = plot of the lindeman spine — plot.lindeman","text":"Ulrike Schuckel,  Stuart R. Borrett","code":""},{"path":"/reference/plot.lindeman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot.lindeman INPUT = network object OUTPUT = plot of the lindeman spine — plot.lindeman","text":"","code":"if (FALSE) { # \\dontrun{ data(enaModels) model <- enaModels[[8]] plot.lindeman(model) } # }"},{"path":"/reference/read.EcoNet.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an EcoNet model. — read.EcoNet","title":"Read an EcoNet model. — read.EcoNet","text":"function allows user access models formatted EcoNet, web-based interface conducting ENA (http://eco.engr.uga.edu/), Caner Kazanci University Georgia.","code":""},{"path":"/reference/read.EcoNet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an EcoNet model. — read.EcoNet","text":"","code":"read.EcoNet(file = \"file path\", verbose = FALSE, parse = FALSE)"},{"path":"/reference/read.EcoNet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an EcoNet model. — read.EcoNet","text":"file Path EcoNet formatted file verbose LOGICAL: warnings suppressed? parse file input parsed webpage?","code":""},{"path":"/reference/read.EcoNet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an EcoNet model. — read.EcoNet","text":"Returns model formatted network object.","code":""},{"path":"/reference/read.EcoNet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read an EcoNet model. — read.EcoNet","text":"Kazanci, C., 2007. EcoNet: new software ecological modeling, simulation network analysis, Ecol. Model., Vol 208/1 pp 3-8.","code":""},{"path":[]},{"path":"/reference/read.EcoNet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read an EcoNet model. — read.EcoNet","text":"Matthew K. Lau","code":""},{"path":"/reference/read.enam.html","id":null,"dir":"Reference","previous_headings":"","what":"R function to read in a matrix formatted as Mdloti (Ursula Sharler) — read.enam","title":"R function to read in a matrix formatted as Mdloti (Ursula Sharler) — read.enam","text":"function reads network data excel file commonly used Ursula Sharler.  file three header lines (name/source, number compartments, number living nodes) n+2 x n+2 matrix flows.  flow matrix additional row imports biomass additional columns exports respirations.","code":""},{"path":"/reference/read.enam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R function to read in a matrix formatted as Mdloti (Ursula Sharler) — read.enam","text":"","code":"read.enam(file = \"file path and name\")"},{"path":"/reference/read.enam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R function to read in a matrix formatted as Mdloti (Ursula Sharler) — read.enam","text":"file name path data file.  function assumes data stored first sheet Microsoft Excel formatted. NOTE:  function depends read_xls function readxl package, requires entire path specified root directory (.e. absolute path).","code":""},{"path":"/reference/read.enam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R function to read in a matrix formatted as Mdloti (Ursula Sharler) — read.enam","text":"Returns network object.","code":""},{"path":"/reference/read.enam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"R function to read in a matrix formatted as Mdloti (Ursula Sharler) — read.enam","text":"Fath, B. D., Borrett, S. R. 2006. Matlab function Network Environ Analysis.  Environ. Model. Softw. 21, 375-405.","code":""},{"path":[]},{"path":"/reference/read.enam.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R function to read in a matrix formatted as Mdloti (Ursula Sharler) — read.enam","text":"Stuart R. Borrett","code":""},{"path":"/reference/read.nea.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an NEA formatted model into a network object — read.nea","title":"Read an NEA formatted model into a network object — read.nea","text":"function reads creates network object NEA formatted data file (Fath Borrett 2006).","code":""},{"path":"/reference/read.nea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an NEA formatted model into a network object — read.nea","text":"","code":"read.nea(file = \"file name\", sep = \",\", warn = TRUE)"},{"path":"/reference/read.nea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an NEA formatted model into a network object — read.nea","text":"file name path data file. sep separation character used delimit data values. warn LOGICAL: pack warnings reported?","code":""},{"path":"/reference/read.nea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an NEA formatted model into a network object — read.nea","text":"Returns network object.","code":""},{"path":"/reference/read.nea.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read an NEA formatted model into a network object — read.nea","text":"Fath, B. D., Borrett, S. R. 2006. Matlab function Network Environ Analysis.  Environ. Model. Softw. 21, 375-405.","code":""},{"path":[]},{"path":"/reference/read.nea.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read an NEA formatted model into a network object — read.nea","text":"Stuart R. Borrett","code":""},{"path":"/reference/read.scor.html","id":null,"dir":"Reference","previous_headings":"","what":"SCOR formatted file into R in multiple formats INPUT = file path — read.scor","title":"SCOR formatted file into R in multiple formats INPUT = file path — read.scor","text":"Read network model data files SCOR format (REFERENCE).","code":""},{"path":"/reference/read.scor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCOR formatted file into R in multiple formats INPUT = file path — read.scor","text":"","code":"read.scor(file, from.file = TRUE, warn = FALSE)"},{"path":"/reference/read.scor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCOR formatted file into R in multiple formats INPUT = file path — read.scor","text":"file File path plain text. .file States whether file argument input treated file path (TRUE) plain text (FALSE). warn Turn (TRUE) (FALSE) warnings.","code":""},{"path":"/reference/read.scor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SCOR formatted file into R in multiple formats INPUT = file path — read.scor","text":"Returns network model one several formats. default format network object used statnet package (type=\"network\").  Three options network environ analysis format (type=\"nea\") defined (Fath Borrett 2006), list format (type=\"list\") edge list (type=\"edge.list\").","code":""},{"path":"/reference/read.scor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SCOR formatted file into R in multiple formats INPUT = file path — read.scor","text":"SCOR file must formatted properly. particular, number nodes second line must first three characters dedicated total number nodes next three characters contain number living nodes. , second line file formatted 'xxxyyy' x y characters total number nodes number living nodes, respectively. Thus, total number nodes 10 number living nodes 1, second line read, \" 10 1.\"","code":""},{"path":"/reference/read.scor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SCOR formatted file into R in multiple formats INPUT = file path — read.scor","text":"Ulanowicz, R.E. J.J. Kay. 1991. package analysis ecosystem flow networks. Environmental Software 6:131-142. Fath, B. D., Borrett, S. R. 2006. Matlab function Network Environ Analysis.  Environ. Model. Softw. 21, 375-405.","code":""},{"path":"/reference/read.scor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SCOR formatted file into R in multiple formats INPUT = file path — read.scor","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/read.wand.html","id":null,"dir":"Reference","previous_headings":"","what":"WAND formatted file into R — read.wand","title":"WAND formatted file into R — read.wand","text":"Reads WAND formatted network models.","code":""},{"path":"/reference/read.wand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WAND formatted file into R — read.wand","text":"","code":"read.wand(file = \"file name with path\")"},{"path":"/reference/read.wand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WAND formatted file into R — read.wand","text":"file File path WAND formatted data file.","code":""},{"path":"/reference/read.wand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WAND formatted file into R — read.wand","text":"Returns network object WAND formatted data file.","code":""},{"path":"/reference/read.wand.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"WAND formatted file into R — read.wand","text":"IMPORTANT: function depends read_xlsx function readxl package, requires entire path specified root directory (.e. absolute path).","code":""},{"path":"/reference/read.wand.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"WAND formatted file into R — read.wand","text":"Allesina, S., Bondavalli, C., 2004. WAND: Ecological Network Analysis user-friendly tool. Environmental Modelling Software 19(4):337-340.","code":""},{"path":"/reference/read.wand.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WAND formatted file into R — read.wand","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/relationalChange.html","id":null,"dir":"Reference","previous_headings":"","what":"Relational change compared between two matrices. — relationalChange","title":"Relational change compared between two matrices. — relationalChange","text":"Identifies signs pairwise relationsips two matrices compares difference .","code":""},{"path":"/reference/relationalChange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relational change compared between two matrices. — relationalChange","text":"","code":"relationalChange(x = \"Direct.U\", y = \"Integral.U\")"},{"path":"/reference/relationalChange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relational change compared between two matrices. — relationalChange","text":"x x square matrix real numbers.  function general, initial intention direct utility matrix. y y square matrix real numbers.  function general, initial intention integral utility matrix mixed trophic impacts matrix.","code":""},{"path":"/reference/relationalChange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relational change compared between two matrices. — relationalChange","text":"Direct.Signs sign matrix matrix x. Integral.Signs sign matrix matrix x. Direct.Relations matrix pairwise sign relationships matrix x. Integral.Relations matrix pairwise signed relationships matrix y. Relations.Table table summarizes relations. Changed.Table summary table pariwise relationships changed x y. ns vector network statisitcs currently includes one whole-network statistic - ratio relationships changed x y.","code":""},{"path":"/reference/relationalChange.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Relational change compared between two matrices. — relationalChange","text":"function called enaUtility enaMTI summarize results.","code":""},{"path":[]},{"path":"/reference/relationalChange.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Relational change compared between two matrices. — relationalChange","text":"Stuart R. Borrett","code":""},{"path":"/reference/scc.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the strongly connected component — scc","title":"Find the strongly connected component — scc","text":"function finds strongly connected components (SCCs) adjacency matrix returns number derived network statistics.","code":""},{"path":"/reference/scc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the strongly connected component — scc","text":"","code":"scc(A = \"adjacency\")"},{"path":"/reference/scc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the strongly connected component — scc","text":"n x n adjacency matrix.","code":""},{"path":"/reference/scc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the strongly connected component — scc","text":"sp list structural properties including: number SCCs (\".scc\"), number SCCs 1 node (\".scc.big\"), fraction network nodes participating large SCC (\"pscc\") membership numeric vector giving cluseter id node belongs (igraph:clusters) scc.id numeric vector numeric identity \"membership\" SCCs 1 node","code":""},{"path":"/reference/scc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find the strongly connected component — scc","text":"Input matrix assumed oriented columns rows.","code":""},{"path":"/reference/scc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find the strongly connected component — scc","text":"Allesina, S., Bodini, ., Bondavalli, C., 2005. Ecological subsystems via graph theory: role strongly connected components. Oikos 110, 164-176. Berman, ., Plemmons, R.J., 1979. Nonnegative Matrices Mathematical Sciences. Academic Press, New York. Borrett, S.R., Fath, B.D., Patten, B.C. 2007. Functional integration ecological networks pathway proliferation.  Journal Theoretical Biology 245, 98-111.","code":""},{"path":[]},{"path":"/reference/scc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find the strongly connected component — scc","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/scc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the strongly connected component — scc","text":"","code":"data(troModels) A <- enaStructure(troModels[[6]])$A scc(A) #> $sp #>     no.scc no.scc.big       pscc  #>        2.0        1.0        0.8  #>  #> $membership #> [1] 1 2 2 2 2 #>  #> $scc.id #> [1] 1 #>"},{"path":"/reference/scifix.html","id":null,"dir":"Reference","previous_headings":"","what":"scifix Corrects missing e or E in scientific notation — scifix","title":"scifix Corrects missing e or E in scientific notation — scifix","text":"support function corrects scientific notation SCOR formatted data files.","code":""},{"path":"/reference/scifix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scifix Corrects missing e or E in scientific notation — scifix","text":"","code":"scifix(x)"},{"path":"/reference/scifix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scifix Corrects missing e or E in scientific notation — scifix","text":"x numeric character scalar.","code":""},{"path":"/reference/scifix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scifix Corrects missing e or E in scientific notation — scifix","text":"Returns numeric scalar appropriate scientific notation.","code":""},{"path":[]},{"path":"/reference/scifix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"scifix Corrects missing e or E in scientific notation — scifix","text":"Matthew K. Lau","code":""},{"path":"/reference/set.orient.html","id":null,"dir":"Reference","previous_headings":"","what":"Globally reorients matrices — set.orient","title":"Globally reorients matrices — set.orient","text":"Changes orientation output matrices.","code":""},{"path":"/reference/set.orient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Globally reorients matrices — set.orient","text":"","code":"set.orient(x = c(\"rc\", \"school\"))"},{"path":"/reference/set.orient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Globally reorients matrices — set.orient","text":"x school determining orientation","code":""},{"path":"/reference/set.orient.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Globally reorients matrices — set.orient","text":"enaR package whole, broader network analysis community, assumes row column orientation; thus, default orientation package row column (DEFAULT = 'rc'). However, functions Patten school orignially developed conduct calculations produce output column row orientation. order facilitate use functions, also provide option users return output orientation \"school\" (.e. Patten results column row oriented) setting global orientation \"school\" using fuction.  Orientation setting. \"rc\" (DEFAULT), matrix output returned row (=input) column (=output) orientation, regardless school. \"school\", output matrices functions particular ENA schools oriented expected school (.e. Patten = column-row Ulanowicz = row-column). Note, functions enaR package expect input matrices oriented row-column.","code":""},{"path":[]},{"path":"/reference/set.orient.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Globally reorients matrices — set.orient","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/set.orient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Globally reorients matrices — set.orient","text":"","code":"original.orientation = get.orient() original.orientation #> [1] \"rc\" set.orient(\"school\") #> Warning: NOTE: output of functions from a particular analytical school will be returned in the standard orientation of that school. get.orient() #> [1] \"school\" set.orient(\"rc\") get.orient() #> [1] \"rc\" set.orient(original.orientation)"},{"path":"/reference/signs.html","id":null,"dir":"Reference","previous_headings":"","what":"Signs and summary of input matrix — signs","title":"Signs and summary of input matrix — signs","text":"Identifies signs pairwise relationsips given matrix.  includes also returns summary table provides ecological name pairwise realtionship, summary counts.","code":""},{"path":"/reference/signs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signs and summary of input matrix — signs","text":"","code":"signs(x = \"matrix\")"},{"path":"/reference/signs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signs and summary of input matrix — signs","text":"x square matrix real numbers.  function general, initail intention utility matrix mixed trophic impacts matrix.","code":""},{"path":"/reference/signs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signs and summary of input matrix — signs","text":"sign sign matrix matrix x. relations matrix pairwise signed relationships x. rs.tab Table summarizing pairwise relationships identifying ecological label. relationship.counts count different kinds pairwise relationships found matrix x.","code":""},{"path":"/reference/signs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Signs and summary of input matrix — signs","text":"function called relationalChange, created generate informative output enaUtility enaMTI.","code":""},{"path":[]},{"path":"/reference/signs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Signs and summary of input matrix — signs","text":"Stuart R. Borrett","code":""},{"path":"/reference/ssCheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if the given network is out of balance by a given tolerance threshold — ssCheck","title":"Checks if the given network is out of balance by a given tolerance threshold — ssCheck","text":"function supports balancing process checking inputs outputs given network model within acceptable limits.","code":""},{"path":"/reference/ssCheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if the given network is out of balance by a given tolerance threshold — ssCheck","text":"","code":"ssCheck(x, tol = 5, more = FALSE, zero.na = TRUE)"},{"path":"/reference/ssCheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if the given network is out of balance by a given tolerance threshold — ssCheck","text":"x network object. tol threshold balance percent difference input outputs. LOGICAL: detailed results returned? zero.na LOGICAL: NA values changed zeros?","code":""},{"path":"/reference/ssCheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if the given network is out of balance by a given tolerance threshold — ssCheck","text":"Returns logical value stating model within acceptable limits balance (TRUE) (FALSE).","code":""},{"path":"/reference/ssCheck.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Checks if the given network is out of balance by a given tolerance threshold — ssCheck","text":"Fath, B.D. S.R. Borrett. 2006. MATLAB function network environ analysis. Environmental Modelling & Software 21:375-405.","code":""},{"path":[]},{"path":"/reference/ssCheck.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Checks if the given network is out of balance by a given tolerance threshold — ssCheck","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/ssCheck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks if the given network is out of balance by a given tolerance threshold — ssCheck","text":"","code":"data(troModels) ssCheck(troModels[[2]]) #> [1] TRUE ssCheck(troModels[[6]]) #> [1] TRUE"},{"path":"/reference/structure.statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"structural statistics — structure.statistics","title":"structural statistics — structure.statistics","text":"function returns several network statistics describe network.","code":""},{"path":"/reference/structure.statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"structural statistics — structure.statistics","text":"","code":"structure.statistics(A = \"adjacency matrix\")"},{"path":"/reference/structure.statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"structural statistics — structure.statistics","text":"adjacency matrix.","code":""},{"path":"/reference/structure.statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"structural statistics — structure.statistics","text":"n Number nodes . L Number direct connections . C Connectivity . LD Link density. lam1A First dominant eigenvalue . mlam1A Multiplicity dominant eigenvalue. lam2A Magnitude second largest eigenvalue. rho Damping ratio (see Caswell 2001). R Distance lam1A bulk eigen spectrum. d Difference dominant eigenvalue link density. .scc Number strongly connected components. .scc.big Number strongly connected components greater 1. pscc Precent nodes participating strongly connected component.","code":""},{"path":"/reference/structure.statistics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"structural statistics — structure.statistics","text":"Fath, B. D., Borrett, S. R. 2006. Matlab function Network Environ Analysis.  Environ. Model. Softw. 21, 375-405.","code":""},{"path":[]},{"path":"/reference/structure.statistics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"structural statistics — structure.statistics","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/troModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Trophic Models — troModels","title":"Trophic Models — troModels","text":"set 58 trophic models compiled SEE Lab UNCW.","code":""},{"path":"/reference/troModels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trophic Models — troModels","text":"Borrett, S. R., M. K. Lau. Prep. enaR: R package Ecological Network Analysis. Ecological Modeling Software.","code":""},{"path":"/reference/unpack.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts network object into a list — unpack","title":"Extracts network object into a list — unpack","text":"Separates components network object separate components within list. includes inputs, exports, respirations, outputs (exports + respirations), storage, internal flows.","code":""},{"path":"/reference/unpack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts network object into a list — unpack","text":"","code":"unpack(x = \"network object\")"},{"path":"/reference/unpack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts network object into a list — unpack","text":"x network object.  includes weighted flows node.","code":""},{"path":"/reference/unpack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts network object into a list — unpack","text":"F matrix flows node node oreinted row column. z Node boundary inputs. r Node boundary loss respiration. e Node boundary loss due exportation y Node boundary loss; summation r e X Node storage biomass living Logical vector indicating whether node living ","code":""},{"path":"/reference/unpack.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extracts network object into a list — unpack","text":"Flows oriented row column.","code":""},{"path":[]},{"path":"/reference/unpack.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracts network object into a list — unpack","text":"Matthew K. Lau Stuart R. Borrett","code":""},{"path":"/reference/unpack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts network object into a list — unpack","text":"","code":"data(troModels) unpack(troModels[[6]]) #> $F #>                  PLANTS BACTERIA DETRITUS FEEDERS CARNIVORES DETRITUS #> PLANTS                0        0                0          0     8881 #> BACTERIA              0        0               75          0     1600 #> DETRITUS FEEDERS      0        0                0        370      200 #> CARNIVORES            0        0                0          0      167 #> DETRITUS              0     5205             2309          0        0 #>  #> $z #> [1] 11184     0     0     0   635 #>  #> $r #> [1] 2003 3275 1814  203 3109 #>  #> $e #> [1] 300 255   0   0 860 #>  #> $y #> [1] 2303 3530 1814  203 3969 #>  #> $X #> [1]  285.0  117.0   60.0   17.0 3579.4 #>  #> $living #> [1]  TRUE  TRUE  TRUE  TRUE FALSE #>"},{"path":"/reference/write.EcoNet.html","id":null,"dir":"Reference","previous_headings":"","what":"Write enaR models to an EcoNet formatted file. — write.EcoNet","title":"Write enaR models to an EcoNet formatted file. — write.EcoNet","text":"Creates EcoNet model enaR network object can used online interface EcoNet.","code":""},{"path":"/reference/write.EcoNet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write enaR models to an EcoNet formatted file. — write.EcoNet","text":"","code":"write.EcoNet(   x = \"model\",   file = \"file path\",   mn = \"ena_model\",   zero.flows = FALSE )"},{"path":"/reference/write.EcoNet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write enaR models to an EcoNet formatted file. — write.EcoNet","text":"x Network object. file file name path. simple file name given, function uses current working directory default. mn model name EcoNet use. DEFAULT 'ena_model'. zero.flows LOGICAL: zero flow values written?","code":""},{"path":"/reference/write.EcoNet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write enaR models to an EcoNet formatted file. — write.EcoNet","text":"EcoNet formatted text file created model, can input http://eco.engr.uga.edu.","code":""},{"path":"/reference/write.EcoNet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Write enaR models to an EcoNet formatted file. — write.EcoNet","text":"EcoNet (http://eco.engr.uga.edu/DOC/econet1.html) Kazanci, C. 2009. Handbook Ecological Modelling Informatics, WIT Press.","code":""},{"path":"/reference/write.EcoNet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write enaR models to an EcoNet formatted file. — write.EcoNet","text":"Matthew K. Lau","code":""},{"path":"/reference/write.nea.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted file with data arranged as expected input for NEA.m — write.nea","title":"Create a formatted file with data arranged as expected input for NEA.m — write.nea","text":"function writes network object NEA formatted data file (Fath Borrett 2006).","code":""},{"path":"/reference/write.nea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted file with data arranged as expected input for NEA.m — write.nea","text":"","code":"write.nea(x, file.name, sep = \",\")"},{"path":"/reference/write.nea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted file with data arranged as expected input for NEA.m — write.nea","text":"x Network object. file.name file name path. simple file name given, function uses current working directory default. sep separation character used delimit data values.","code":""},{"path":"/reference/write.nea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formatted file with data arranged as expected input for NEA.m — write.nea","text":"Writes network object NEA formatted file returns output composite matrix.","code":""},{"path":"/reference/write.nea.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a formatted file with data arranged as expected input for NEA.m — write.nea","text":"Fath, B. D., Borrett, S. R. 2006. Matlab function Network Environ Analysis.  Environ. Model. Softw. 21, 375-405.","code":""},{"path":[]},{"path":"/reference/write.nea.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a formatted file with data arranged as expected input for NEA.m — write.nea","text":"Stuart R. Borrett","code":""},{"path":"/news/index.html","id":"enar-301","dir":"Changelog","previous_headings":"","what":"enaR 3.0.1","title":"enaR 3.0.1","text":"Adjusts utility function usage Fixes documentation bugs Adds enaUncertainty Fixes asym warnings Fixes pack Reorganizes models Fixes cfre living vector Fixes enaAscendency Adds model info Adds steady state check enaTroAgg Adds meanTrophicLevel function removes convergence check enaUtility enaMTI","code":""},{"path":"/news/index.html","id":"enar-300","dir":"Changelog","previous_headings":"","what":"enaR 3.0.0","title":"enaR 3.0.0","text":"CRAN release: 2017-09-28 Adjusts utility function usage Fixes documentation bugs Adds enaUncertainty Fixes asym warnings Fixes pack Reorganizes models Fixes cfre living vector Fixes enaAscendency Adds model info Adds steady state check enaTroAgg Adds meanTrophicLevel function removes convergence check enaUtility enaMTI","code":""},{"path":"/news/index.html","id":"enar-2100","dir":"Changelog","previous_headings":"","what":"enaR 2.10.0","title":"enaR 2.10.0","text":"CRAN release: 2017-03-11 Updates enaR-vignette.pdf Adds support bipartite Adds ShannonDiversity function Adds Relations.Table enaUtility enaMTI Adjusts NAMESPACE dependencies meet current CRAN standards Switches package documentation Roxygen format Adds ascendency metrics network statistics enaFlow Fixes bugs enaTroAgg Adds signs function Adds average trophic length enaTroAgg ns Fixes enaStorage example Fixes bug get.ns Fixes bug read.enam Adds control allocation dependency Modifies enaControl Adds tetra-partite partition ascendency Changes enaUtility check storage Fixes unpack living vector","code":""}]
